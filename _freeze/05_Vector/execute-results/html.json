{
  "hash": "3e1ee83b7f7911a6bd46ece2a06d8599",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Векторный анализ\"\nsubtitle: \"Основы геоинформатики. Лекция 5\"\ndate: 03/15/2024\ndate-format: long\nauthor: \"Самсонов Тимофей Евгеньевич\"\nexecute:\n  echo: false\n  freeze: true\nengine: knitr\nformat:\n  revealjs: \n    theme: [default, custom.scss]\n    margin: 0.2\n    slide-number: true\n    footer: \"Самсонов Т. Е. Основы геоинформатики: курс лекций\"\n    header-includes: <link rel=\"stylesheet\" media=\"screen\" href=\"https://fontlibrary.org//face/pt-sans\" type=\"text/css\"/>\nbibliography: references.yaml\nmainfont: PT Sans\n---\n\n\n## Пространственные отношения\n\nОтношение\n\n:   Свойство двух или более объектов, выраженное в наличии или отсутствии определенной связи между ними.\n\nПространственное отношение\n\n:   Отношение пространственных объектов, которое зависит от их местоположения.\n\n::: callout-note\n## Предикат\n\nФормальным представлением отношения является **предикат** --- функция, определенная на множестве объектов и принимающая для их упорядоченного набора значение **1** (`ИСТИНА`) или **0** (`ЛОЖЬ`). Предикаты пространственных отношений называются пространственными.\n:::\n\n## Пространственные отношения\n\nК основным видам пространственных отношений относятся:\n\n1.  **Метрические** --- определяются расстояниями между объектами.\n\n2.  **Топологические** --- определяются пересечениями объектов.\n\n3.  **Дирекционные** --- определяются направлениями между объектами\n\n::: callout-note\n## Пространственные предикаты\n\nФункции, которые устанавливают наличие метрических, топологических и дирекционных отношений, являются пространственными предикатами.\n:::\n\n## Расстояния\n\n::: columns\n::: {.column width=\"50%\"}\n#### Евклидово расстояние\n\nИспользуется в плоских прямоугольных системах координат\n\n$$\nd(A,B) = \\sqrt{(x_A - x_B)^2 + (y_A - y_B)^2}\n$$\n\n::: callout-warning\n## Ограничения\n\nЕвклидово расстояние наследует искажения проекции, а также предполагает, что объекты доступны напрямую.\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/dist_euc.svg){fig-align=\"center\" width=\"70%\"}\n:::\n:::\n\n## Расстояния\n\n::: columns\n::: {.column width=\"50%\"}\n#### Манхэттенское расстояние\n\nАппроксимирует реальное расстояние между точками в транспортных сетях с ортогональной планировкой.\n\n$$\nd(A,B) = |x_A - x_B| + |y_A - y_B|\n$$\n\n::: callout-warning\n## Ограничения\n\nДаёт преимущества только в том случае когда дорожная сеть ориентирована по направлениям осей $X$ и $Y$.\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/dist_manh.svg){width=\"70%\" fig-align=\"center\"}\n:::\n:::\n\n## Расстояния\n\n::: columns\n::: {.column width=\"50%\"}\n#### Геодезические расстояние\n\nКратчайшее расстояние между точками на поверхности эллипсоида. Для сферы:\n\n$$\nd(A,B) = \\\\ \\arccos ( \n\\sin \\phi_A \\sin \\phi_B + \\\\ \n\\cos \\phi_A \\cos \\phi_B \\cos(\\lambda_A - \\lambda_B))\n$$\n:::\n\n::: {.column width=\"50%\"}\n![](images/dist_geo.svg){fig-align=\"center\" width=\"75%\"}\n:::\n:::\n\n::: callout-note\n## Геодезическая линия и ортодромия\n\nЛиния кратчайшего расстояния *на эллипсоиде* --- **геодезическая**.\\\nЛиния кратчайшего расстояния *на сфере* --- **ортодромия.**\n:::\n\n## Метрические отношения\n\n**Метрические отношения** устанавливают расстояния между объектами с использованием выбранной метрики.\n\n![](images/dist_all.svg){width=\"100%\"}\n\n::: callout-note\n## Метрики\n\nДля оценки расстояний может использоваться множество других метрик. Они не исчерпываются приведенными примерами.\n:::\n\n## Топологические отношения\n\nТопологические отношения можно описать в терминах пересечения трех областей каждого объекта [@egenhofer1991]:\n\n::: columns\n::: {.column width=\"40%\"}\n-   Внутренняя область ($A^o$)\n\n-   Граница ($\\partial A$)\n\n-   Внешняя область ($A^-$)\n:::\n\n::: {.column width=\"60%\"}\n![](images/egenhofer.svg){fig-align=\"left\" width=\"70%\"}\n:::\n:::\n\nМатрица Эгенхофера **9-IM** содержит 0 или 1 в зависимости от наличия или отсутствия пересечения:\n\n$$\n\\begin{bmatrix}\nA^o  \\cap B^o \\ne \\emptyset   &   A^o \\cap \\partial{B} \\ne \\emptyset & A^o \\cap B^- \\ne \\emptyset \\\\\n\\partial{A} \\cap B^o \\ne \\emptyset   &    \\partial{A} \\cap \\partial{B} \\ne \\emptyset  &  \\partial{A} \\cap B^- \\ne \\emptyset \\\\\nA^- \\cap B^o \\ne \\emptyset    &    A^- \\cap \\partial{B} \\ne \\emptyset   &   A^-  \\cap B^- \\ne \\emptyset\n\\end{bmatrix}\n$$\n\n## Топологические отношения\n\n::: columns\n::: {.column width=\"60%\"}\n\nНе пересекает\n\n:   Внутренняя область и граница **A** не имеют пересечений с внутренней областью и границей **B**\n\n$$\n\\begin{bmatrix} \n    0 & 0 & \\bf{1} \\\\\n    0 & 0 & \\bf{1} \\\\\n    \\bf{1} & \\bf{1} & \\bf{1} \\\\\n\\end{bmatrix}\n$$\n\n::: callout-note\n## Применение\n\nИспользуется чтобы установить, что объекты никак не соприкасаются в пространстве.\n:::\n:::\n\n::: {.column width=\"40%\"}\n![](images/topo_disjoint.svg){width=\"70%\"}\n:::\n:::\n\n## Топологические отношения\n\n::: columns\n::: {.column width=\"60%\"}\n\nРавен\n\n:   Границы, внутренние и внешние области **A** пересекаются с *аналогичными* элементами **B**\n\n$$\n\\begin{bmatrix} \n    \\bf{1} & 0 & 0 \\\\\n    0 & \\bf{1} & 0 \\\\\n    0 & 0 & \\bf{1} \\\\\n\\end{bmatrix}\n$$\n\n::: callout-note\n## Применение\n\nИспользуется чтобы установить, что объекты совпадают.\n:::\n:::\n\n::: {.column width=\"40%\"}\n![](images/topo_equals.svg){width=\"70%\"}\n:::\n:::\n\n## Топологические отношения\n\n::: columns\n::: {.column width=\"60%\"}\n\nПерекрывает\n\n:   Все компоненты **A** пересекаются со всеми компонентами **B**\n\n$$\n\\begin{bmatrix} \n    \\bf{1} & \\bf{1} & \\bf{1} \\\\\n    \\bf{1} & \\bf{1} & \\bf{1} \\\\\n    \\bf{1} & \\bf{1} & \\bf{1} \\\\\n\\end{bmatrix}\n$$\n\n::: callout-note\n## Применение\n\nИспользуется чтобы установить, что объекты имеют частичное перекрытие.\n:::\n:::\n\n::: {.column width=\"40%\"}\n![](images/topo_overlaps.svg){width=\"70%\"}\n:::\n:::\n\n## Топологические отношения\n\n::: columns\n::: {.column width=\"60%\"}\n\nКасается\n\n:   Внутренняя область и граница **A** не пересекатся с внутренней областью **B** и наоборот.\n\n$$\n\\begin{bmatrix} \n    0 & 0 & \\bf{1} \\\\\n    0 & \\bf{1} & \\bf{1} \\\\\n    \\bf{1} & \\bf{1} & \\bf{1} \\\\\n\\end{bmatrix}\n$$\n\n::: callout-note\n## Применение\n\nИспользуется чтобы установить, что объекты касаются друг друга снаружи.\n:::\n:::\n\n::: {.column width=\"40%\"}\n![](images/topo_touches.svg){width=\"70%\"}\n:::\n:::\n\n## Топологические отношения\n\n::: columns\n::: {.column width=\"65%\"}\n\nПокрывает\n\n:   Внешняя область **A** не пересекается с границей и внутренней областью **B**, а граница **A** не пересекается с внутренней областью **B**.\n\n$$\n\\begin{bmatrix} \n    \\bf{1} & \\bf{1} & \\bf{1} \\\\\n    0 & \\bf{1} & \\bf{1} \\\\\n    0 & 0 & \\bf{1} \\\\\n\\end{bmatrix}\n$$\n\n::: callout-note\n## Применение\n\nИспользуется чтобы установить, что один объект содержит внутри себя другой объект, который касается его границы.\n:::\n:::\n\n::: {.column width=\"35%\"}\n![](images/topo_covers.svg){width=\"70%\"}\n:::\n:::\n\n## Топологические отношения\n\n::: columns\n::: {.column width=\"65%\"}\n\nПокрыт\n\n:   Внешняя область **B** не пересекается с границей и внутренней областью **A**, а граница **B** не пересекается с внутренней областью **A**.\n\n$$\n\\begin{bmatrix} \n    \\bf{1} & 0 & 0 \\\\\n    \\bf{1} & \\bf{1} & 0 \\\\\n    \\bf{1} & \\bf{1} & \\bf{1} \\\\\n\\end{bmatrix}\n$$\n\n::: callout-note\n## Применение\n\nИспользуется чтобы установить, что один объект содержится внутри другого объекта и касается его границы.\n:::\n:::\n\n::: {.column width=\"35%\"}\n![](images/topo_covered.svg){width=\"70%\"}\n:::\n:::\n\n## Топологические отношения\n\n::: columns\n::: {.column width=\"65%\"}\n\nСодержит\n\n:   Внешняя область и граница **A** не пересекается с границей и внутренней областью **B**, остальные пересечения присутствуют.\n\n$$\n\\begin{bmatrix} \n    \\bf{1} & \\bf{1} & \\bf{1} \\\\\n    0 & 0 & \\bf{1} \\\\\n    0 & 0 & \\bf{1} \\\\\n\\end{bmatrix}\n$$\n\n::: callout-note\n## Применение\n\nИспользуется чтобы установить, что один объект содержит внутри себя другой объект.\n:::\n:::\n\n::: {.column width=\"35%\"}\n![](images/topo_contains.svg){width=\"80%\"}\n:::\n:::\n\n## Топологические отношения\n\n::: columns\n::: {.column width=\"65%\"}\n\nВнутри\n\n:   Внешняя область и граница **B** не пересекается с границей и внутренней областью **A**, остальные пересечения присутствуют.\n\n$$\n\\begin{bmatrix} \n    \\bf{1} & 0 & 0 \\\\\n    \\bf{1} & 0 & 0 \\\\\n    \\bf{1} & \\bf{1} & \\bf{1} \\\\\n\\end{bmatrix}\n$$\n\n::: callout-note\n## Применение\n\nИспользуется чтобы установить, что один объект содержится внутри другого объекта.\n:::\n:::\n\n::: {.column width=\"35%\"}\n![](images/topo_within.svg){width=\"70%\"}\n:::\n:::\n\n## Топологические отношения\n\nПересекает\n\n:   Внутренняя область или граница **A** пересекается с внутренней областью или границей **B**.\n\n![](images/topo_all.svg){fig-align=\"center\" width=\"100%\"}\n\n## Пересдача контрольной работы №1\n\n| Группа                                 | Преподаватели                          | Пересдача                              |\n|----------------------------------------|----------------------------------------|----------------------------------------|\n| 206, 207, 209, 213, 214, 217           | Грищенко, Карпачевский, Ушакова, Энтин | **Четверг 21 марта, 17:00, ауд. 1903** |\n| 201, 202, 204, 210, 212, 218, 221, 222 | Аляутдинов, Титов                      | **Вторник 26 марта, 17:30, ауд. 1903** |\n\n## Дирекционные отношения\n\n::: columns\n::: {.column width=\"50%\"}\n**Угловая (коническая) модель** базируется на вычислении угла направления с точки **A** в точку **B**.\n\n-   Как правило используется дирекционный угол или азимут.\n\n::: callout-caution\n## Ограничения\n\nПрименима только для точечных объектов\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/dir_ang.svg){width=\"70%\"}\n:::\n:::\n\n## Дирекционные отношения\n\n::: columns\n::: {.column width=\"60%\"}\n**Прямоугольная модель** разделяет плоскость на 9 секторов относительно прямоугольника, ограничивающего объект.\n\n-   Используется минимальный ограничивающий прямоугольник со сторонами, параллельными осям координат.\n\n::: callout-caution\n## Ограничения\n\nДает качественную оценку направления по сторонам света\n:::\n:::\n\n::: {.column width=\"40%\"}\n![](images/dir_mbr.svg){width=\"100%\"}\n:::\n:::\n\n## Дирекционные отношения\n\n::: columns\n::: {.column width=\"50%\"}\n**Проективная модель** используется для оценки направления на третий объект **C** относительно двух других объектов **A** и **B**.\n\n-   Плоскость делится на 4 \"конуса\", а также область между объектами.\n\n::: callout-caution\n## Ограничения\n\nДает качественную оценку направления и применяется для *движущихся* объектов\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/dir_proj.svg){width=\"100%\"}\n:::\n:::\n\n## Пространственные запросы\n\nПространственные запросы аналогичны атрибутивным, но в качестве условия используют пространственные отношения.\n\n![](images/sp_relations.svg){width=\"100%\"}\n\n## Пространственные запросы\n\n::: columns\n::: {.column width=\"50%\"}\n![Дома на расстоянии 100 м от реки](images/dist_bld.svg){fig-align=\"left\" width=\"60%\"}\n\n![Почвенные разрезы в пределах леса](images/within_pts.svg){fig-align=\"left\" width=\"60%\"}\n:::\n\n::: {.column width=\"50%\"}\n![Дороги, примыкающие к границе](images/touch_rds.svg){fig-align=\"left\" width=\"60%\"}\n\n![Метеостанции к северо-западу от гидропоста](images/dir_meteo.svg){fig-align=\"left\" width=\"55%\"}\n:::\n:::\n\n## Длина / периметр\n\n::: columns\n::: {.column width=\"50%\"}\nРассчитываются как сумма длин отрезков, составляющих контур объекта:\n\n$$\nL =\\\\ \\sum_{i=0}^{n-2}\\sqrt{(x_{i+1}-x_i)^2 + (y_{i+1}-y_i)^2}\n$$\n\n::: callout-note\n## Полигон\n\nУ полигона последняя точка должна иметь такие же координаты, как и первая.\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/perimeter.svg){width=\"100%\"}\n:::\n:::\n\n## Площадь\n\n::: columns\n::: {.column width=\"50%\"}\nРассчитывается как сумма площадей трапеций, ограниченных сверху отрезками, составляющими контур объекта:\n\n$$\nA = \\frac{1}{2}\\sum_{i=0}^{n-2} \\underbrace{(y_{i+1}+y_{i})}_{\\texttt{основания}}\\underbrace{(x_{i+1}-x_{i})}_{\\texttt{высота}}\n$$\n\n::: callout-note\n## Отрицательная площадь\n\nТрапеции, у которых $i+1$-я точка имеет меньший X, чем $i$-я, имеют отрицательную площадь.\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/area.svg){width=\"100%\"}\n:::\n:::\n\n## Принадлежность точки полигону\n\nЛуч, выпущенный из точки в направлении оси $X$, пересекает границу полигона **нечетное** количество раз.\n\n::: columns\n::: {.column width=\"60%\"}\n![](images/point_polygon.svg){width=\"90%\"}\n:::\n\n::: {.column width=\"40%\"}\n::: callout-note\n## Обратите внимание\n\nЕсли луч пересекает одну из *вершин* полигона, и оба примыкающих к ней отрезка находятся по одну сторону от луча, это засчитывается как два пересечения.\n:::\n:::\n:::\n\n::: callout-tip\n## Применение\n\nДанная операция активно используется при оценке топологических отношений — например, для выполнения пространственных запросов.\n:::\n\n## Ограничивающий прямоугольник\n\n::: columns\n::: {.column width=\"50%\"}\n**Ограничивающий прямоугольник** определяет охват данных по осям координат.\n\nЗадаётся координатами углов:\n\n-   левого нижнего $(x_{min}, y_{min})$\n\n-   правого верхнего $(x_{max}, y_{max})$\n:::\n\n::: {.column width=\"50%\"}\n![](images/bbox.svg){width=\"100%\"}\n:::\n:::\n\n::: callout-tip\n## Применение\n\nОграничивающий прямоугольник является важным элементом *метаданных* --- описания пространственных данных, но также используется и в аналитических задачах.\n:::\n\n## Выпуклая оболочка\n\n::: columns\n::: {.column width=\"50%\"}\n**Выпуклая оболочка** --- наименьший по площади выпуклый многоугольник, *покрывающий* заданное множество точек.\n\n::: callout-note\n## Выпуклое множество\n\nМножество, в котором отрезок, соединяющий любые две точки также находится внутри этого множества.\n\n![](images/non_convex.svg){width=\"65%\"}\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/convex_hull.svg){width=\"75%\"}\n\n::: callout-tip\n## Применение\n\nВыпуклые оболочки используются для восстановления ареалов по точечным измерениям. Также выпуклая оболочка является границей *триангуляционного покрытия*.\n:::\n:::\n:::\n\n## Выпуклая оболочка\n\nИзвестный метод построения --- **алгоритм Джарвиса** [@jarvis1973]:\n\n::: columns\n::: {.column width=\"55%\"}\n1.  Найти точку $q_0$ с минимальной координатой $X$.\n:::\n\n::: {.column width=\"45%\"}\n![](images/convex_hull_1.svg){width=\"100%\"}\n:::\n:::\n\n## Выпуклая оболочка\n\nИзвестный метод построения --- **алгоритм Джарвиса** [@jarvis1973]:\n\n::: columns\n::: {.column width=\"55%\"}\n1.  Найти точку $q_0$ с минимальной координатой $X$.\n\n2.  Найти точку $q_1$ с минимальным дир. углом относительно $q_0$.\n:::\n\n::: {.column width=\"45%\"}\n![](images/convex_hull_2.svg){width=\"100%\"}\n:::\n:::\n\n## Выпуклая оболочка\n\nИзвестный метод построения --- **алгоритм Джарвиса** [@jarvis1973]:\n\n::: columns\n::: {.column width=\"55%\"}\n1.  Найти точку $q_0$ с минимальной координатой $X$.\n\n2.  Найти точку $q_1$ с минимальным дир. углом относительно $q_0$.\n\n3.  Пока $q_k \\neq q_0$ начиная с $k=1$\n\n    -   найти точку $q_{k+1}$ с минимальным углом поворота относительно прямой, проходящей через $\\overline{q_{k-1}q_k}$;\n\n    -   $k = k + 1$.\n\n$k = 2,~q_2 \\neq q_0$\n:::\n\n::: {.column width=\"45%\"}\n![](images/convex_hull_3.svg){width=\"100%\"}\n:::\n:::\n\n## Выпуклая оболочка\n\nИзвестный метод построения --- **алгоритм Джарвиса** [@jarvis1973]:\n\n::: columns\n::: {.column width=\"55%\"}\n1.  Найти точку $q_0$ с минимальной координатой $X$.\n\n2.  Найти точку $q_1$ с минимальным дир. углом относительно $q_0$.\n\n3.  Пока $q_k \\neq q_0$ начиная с $k=1$\n\n    -   найти точку $q_{k+1}$ с минимальным углом поворота относительно прямой, проходящей через $\\overline{q_{k-1}q_k}$;\n\n    -   $k = k + 1$.\n\n$k=3,~q_3 \\neq q_0$\n:::\n\n::: {.column width=\"45%\"}\n![](images/convex_hull_4.svg){width=\"100%\"}\n:::\n:::\n\n## Выпуклая оболочка\n\nИзвестный метод построения --- **алгоритм Джарвиса** [@jarvis1973]:\n\n::: columns\n::: {.column width=\"55%\"}\n1.  Найти точку $q_0$ с минимальной координатой $X$.\n\n2.  Найти точку $q_1$ с минимальным дир. углом относительно $q_0$.\n\n3.  Пока $q_k \\neq q_0$ начиная с $k=1$\n\n    -   найти точку $q_{k+1}$ с минимальным углом поворота относительно прямой, проходящей через $\\overline{q_{k-1}q_k}$;\n\n    -   $k = k + 1$.\n\n$k=4,~q_4 \\neq q_0$\n:::\n\n::: {.column width=\"45%\"}\n![](images/convex_hull_5.svg){width=\"100%\"}\n:::\n:::\n\n## Выпуклая оболочка\n\nИзвестный метод построения --- **алгоритм Джарвиса** [@jarvis1973]:\n\n::: columns\n::: {.column width=\"55%\"}\n1.  Найти точку $q_0$ с минимальной координатой $X$.\n\n2.  Найти точку $q_1$ с минимальным дир. углом относительно $q_0$.\n\n3.  Пока $q_k \\neq q_0$ начиная с $k=1$\n\n    -   найти точку $q_{k+1}$ с минимальным углом поворота относительно прямой, проходящей через $\\overline{q_{k-1}q_k}$;\n\n    -   $k = k + 1$.\n\n$k=5,~q_5 \\neq q_0$\n:::\n\n::: {.column width=\"45%\"}\n![](images/convex_hull_6.svg){width=\"100%\"}\n:::\n:::\n\n## Выпуклая оболочка\n\nИзвестный метод построения --- **алгоритм Джарвиса** [@jarvis1973]:\n\n::: columns\n::: {.column width=\"55%\"}\n1.  Найти точку $q_0$ с минимальной координатой $X$.\n\n2.  Найти точку $q_1$ с минимальным дир. углом относительно $q_0$.\n\n3.  Пока $q_k \\neq q_0$ начиная с $k=1$\n\n    -   найти точку $q_{k+1}$ с минимальным углом поворота относительно прямой, проходящей через $\\overline{q_{k-1}q_k}$;\n\n    -   $k = k + 1$.\n\n$k=6,~q_6 = q_0$\n:::\n\n::: {.column width=\"45%\"}\n![](images/convex_hull_7.svg){width=\"100%\"}\n:::\n:::\n\n## Выпуклая оболочка\n\nИзвестный метод построения --- **алгоритм Джарвиса** [@jarvis1973]:\n\n::: columns\n::: {.column width=\"55%\"}\n1.  Найти точку $q_0$ с минимальной координатой $X$.\n\n2.  Найти точку $q_1$ с минимальным дир. углом относительно $q_0$.\n\n3.  Пока $q_k \\neq q_0$ начиная с $k=1$\n\n    -   найти точку $q_{k+1}$ с минимальным углом поворота относительно прямой, проходящей через $\\overline{q_{k-1}q_k}$;\n\n    -   $k = k + 1$.\n\n4.  Восстановить полигон по точкам $q_0, q_1, … q_k$, где $k > 2$ и $q_0 = q_k$.\n:::\n\n::: {.column width=\"45%\"}\n![](images/convex_hull_8.svg){width=\"100%\"}\n:::\n:::\n\n## Диаграмма Вороного\n\n::: columns\n::: {.column width=\"40%\"}\n![](images/voronoy_outline.svg){width=\"100%\"}\n:::\n\n::: {.column width=\"60%\"}\n\nДиаграмма Вороного\n\n:   Диаграмма Вороного конечного множества точек $S$ на плоскости представляет такое разбиение плоскости, при котором каждая область этого разбиения образует множество точек, более близких к одному из элементов множества $S$, чем к любому другому элементу множества.\n:::\n:::\n\n::: callout-tip\n## Применение\n\nДиаграмма Вороного используется при моделировании зон влияния объектов.\n:::\n\n## Диаграмма Вороного\n\n**Пример**: количество заведений общественного питания в окрестностях станций метро\n\n\n::: {.cell layout-align=\"left\"}\n::: {.cell-output-display}\n![](05_Vector_files/figure-revealjs/unnamed-chunk-1-1.png){fig-align='left' width=624}\n:::\n:::\n\n\n## Центроид и срединная ось\n\n::: columns\n::: {.column width=\"50%\"}\n**Центроид** --- точка, представляющая среднее значение координат полигона без учета последней точки (которая совпадает с первой):\n\n$$\nC = \\Bigg(\\frac{1}{n-1}\\sum_{i=0}^{n-2} x_i, \\frac{1}{n-1}\\sum_{i=0}^{n-2} y_i \\Bigg)\n$$\n\n**Срединная ось** --- линия равноудаленная от границ полигона.\n:::\n\n::: {.column width=\"50%\"}\n![](images/centroid_axis.svg){width=\"100%\"}\n\n::: callout-tip\n## Применение\n\nИспользуются для картографической генерализации.\n:::\n:::\n:::\n\n## Буферные зоны\n\n**Буферная зона** --- это множество точек, располагающихся в пределах заданного расстояния относительно объекта.\n\n::: columns\n::: {.column width=\"40%\"}\n-   буфер точки представляет собой круг;\n\n-   буфер полигона может быть положительным и отрицательным;\n\n-   буфер точки или линии всегда положительный.\n:::\n\n::: {.column width=\"60%\"}\n![](images/buffering.svg){width=\"65%\"}\n:::\n:::\n\n::: callout-tip\n## Применение\n\nИспользуются при анализе влияния. Например, определения водоохранных зон.\n:::\n\n## Буферные зоны\n\n**Пример:** кафе в 100-метровой буферной зоне р. Москвы\n\n\n::: {.cell layout-align=\"left\"}\n::: {.cell-output-display}\n![](05_Vector_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='left' width=480}\n:::\n:::\n\n\n## Буферные зоны\n\n**Пример**: изменение количества кафе на $1~км^2$ при удалении от станции метро (расширение буферной зоны).\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](05_Vector_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Преобразование моделей объектов\n\nМежду любыми моделями пространственных объектов возможны взаимные преобразования.\n\n::: columns\n::: {.column width=\"60%\"}\n![](images/conversions.svg){width=\"100%\"}\n:::\n\n::: {.column width=\"40%\"}\n::: callout-tip\n## Применение\n\nНапример, можно получить из полигона заповедника поворотные точки его границы. Или восстановить линию почвенного профиля по точкам разрезов.\n:::\n\n::: callout-important\n## Мультигеометрия\n\nПри конвертации полигона или линии в точки обычно получается мультиточечный объект.\n:::\n:::\n:::\n\n## Преобразования мультиобъектов\n\nВ некоторых случаях требуется преобразовать мультиобъект в множество отдельных объектов и наоборот.\n\n![](images/multi_conv.svg){width=\"100%\"}\n\n::: callout-tip\n## Применение\n\nНапример, требуется провести анализ в пределах отдельных островов архипелага.\n:::\n\n## Слияние (объединение по признаку)\n\n**Слияние** (объединение по признаку) --- это объединение геометрий пересекающихся объектов с одинаковым значением атрибута.\n\n![](images/dissolve.svg){width=\"85%\"}\n\n::: callout-tip\n## Применение\n\nСлияние всегда сопровождает агрегирование атрибутов и используется при укрупнении единиц картографирования. Также может применяться при векторизации, когда объект создается по фрагментам, которые далее необходимо объединить.\n:::\n\n## Оверлей\n\n**Оверлей** — пространственное наложение двух или более пространственных объектов, при котором образуется их геометрическая и атрибутивная композиция.\n\n![](images/overlay.svg){width=\"100%\"}\n\n**Оверлей** — одна из самых полезных геометрических операций.\n\n## Оверлей\n\n::: columns\n::: {.column width=\"50%\"}\n*Пересечение* используется для **обрезки данных** по указанной области.\n\nОбласть обрезки может быть произвольной, но чаще всего используется ограничивающий прямоугольник\n\n::: callout-note\n## Clip\n\nОбрезка данных *(clip)* является частным случаем пересечения с полигональным объектом, при котором наследуются только атрибуты обрезаемых объектов.\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/clip.svg){width=\"100%\"}\n:::\n:::\n\n## Оверлей\n\n::: columns\n::: {.column width=\"50%\"}\n**Пространственная ассоциация** — взаимосвязь местоположения объектов — также может быть исследована путем оверлея.\n\nДля двух классов $A$ и $B$:\n\n-   односторонняя ассоциация:\\\n    $|A \\cap B|/ |A|$\n\n-   двусторонняя ассоциация:\\\n    $|A \\cap B| / |A \\cup B|$\n:::\n\n::: {.column width=\"50%\"}\n![](images/assoc.svg){width=\"80%\"}\n:::\n:::\n\nДля анализа ассоциации двух явлений --- например *типов почв и рельефа* --- состоящих из множества классов, используются специальные индексы. Например, индекс [**Крамера V**](https://en.wikipedia.org/wiki/Cramér%27s_V).\n\n## Оверлей\n\n::: columns\n::: {.column width=\"50%\"}\n**Пространственные соотношения** различных типов объектов в пределах заданных участков также определяются методом оверлея.\n\nДоля класса $A$ в пределах участка $C$:\n\n$$\n|A \\cap C|/ |C|\n$$\n:::\n\n::: {.column width=\"50%\"}\n![](images/ratio.svg){width=\"100%\"}\n:::\n:::\n\n::: callout-tip\n## Пример\n\nМодели формирования речного стока работают на растровой сетке и требуют задания соотношения типов подстилающей поверхности для каждой ячейки.\n:::\n\n## Отношение геометрии и атрибутов\n\nВ геореляционных базах данных допустимое множество операций над атрибутом также зависит от того как он получен относительно пространства.\n\n**Опора измерений** — физический объем, подвергнутый измерению.\n\n::: columns\n::: {.column width=\"50%\"}\n::: callout-note\n## Экстенсивные атрибуты\n\nПропорциональны опоре измерений. Суммируются при объединении территорий и делятся при разделении.\n\n![Численность населения](images/extensive.svg){width=\"100%\"}\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: callout-note\n## Интенсивные атрибуты\n\nНе пропорциональны опоре измерений. Осредняются при объединении территорий и остаются прежними при разделении.\n\n![Плотность населения](images/intensive.svg){width=\"100%\"}\n:::\n:::\n:::\n\n## Оверлей\n\n**Интерполяция, взвешенная на площадь** — способ пересчета количественного показателя между сетками учетных единиц.\n\n::: columns\n::: {.column width=\"50%\"}\nДля каждой из $q$ выходных единиц $T_j$, средневзвешенное значение $Y_i$ извлеченное из $p$ исходных единиц $S_i$, равно:\n\n$$\n\\hat{Y_j}(T_j) = \\sum_{i=1}^p w_{ij} Y_i(S_i)\n$$\n\n-   экстенсивная: $w_{ij} = \\frac{|T_j \\cap S_i|}{|S_i|}$\n\n-   интенсивная: $w_{ij} = \\frac{|T_j \\cap S_i|}{|T_j|}$\n:::\n\n::: {.column width=\"50%\"}\n![](images/areaweighted.svg){width=\"100%\"}\n:::\n:::\n\n## Словарик (часть 1)\n\n::: columns\n::: {.column width=\"50%\" style=\"color: blue; text-align: end;\"}\nПространственное отношение\n\nЕвклидово расстояние\n\nГеодезическое расстояние\n\nМетрическое отношение\n\nТопологическое отношение\n\nДирекционное отношение\n\nПространственный запрос\n\nОгранич. прямоугольник\n\nВыпуклая оболочка\n:::\n\n::: {.column width=\"50%\" style=\"color: red\"}\nSpatial relation\n\nEuclidean distance\n\nGeodesic distance\n\nMetric relation\n\nTopological relation\n\nDirectional relation\n\nSpatial query\n\nBounding box\n\nConvex hull\n:::\n:::\n\n## Словарик (часть 2)\n\n::: columns\n::: {.column width=\"50%\" style=\"color: blue; text-align: end;\"}\nДиаграмма Вороного\n\nЦентроид\n\nСрединная ось\n\nБуферная зона\n\nСлияние\n\nОверлей\n\nОбрезка\n\nИнтерполяция, взвешенная на площадь\n:::\n\n::: {.column width=\"50%\" style=\"color: red\"}\nVoronoy diagram\n\nCentroid\n\nMedial axis\n\nBuffer\n\nDissolve\n\nOverlay\n\nClip\n\nArea-weighted interpolation\n:::\n:::\n\n## Библиография\n",
    "supporting": [
      "05_Vector_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}