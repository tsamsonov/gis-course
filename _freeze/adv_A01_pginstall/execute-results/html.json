{
  "hash": "2529e87f4c4a15b2e4198484826a9c68",
  "result": {
    "markdown": "---\ntitle: \"Установка PostgreSQL + PostGIS\"\nsubtitle: \"Геоинформатика I. Дополнительные материалы\"\ndate: 02/10/2023\ndate-format: long\nauthor: \"Самсонов Тимофей Евгеньевич\"\nexecute:\n  echo: false\n  freeze: true\nengine: knitr\nformat:\n  revealjs: \n    theme: [default, custom.scss]\n    margin: 0.2\n    width: 1280\n    height: 720\n    slide-number: true\n    footer: \"Самсонов Т. Е. Геоинформатика: курс лекций\"\n    header-includes: <link rel=\"stylesheet\" media=\"screen\" href=\"https://fontlibrary.org//face/pt-sans\" type=\"text/css\"/>\nbibliography: references.yaml\nmainfont: PT Sans\n---\n\n\n## Установка\n\nДля установки связки PostgreSQL + PostGIS необходимо скачать:\n\n1.  [**PostgreSQL**](https://www.postgresql.org/download/) (дистрибутив *EDB*)\n2.  [**PostGIS**](https://postgis.net/documentation/getting_started/#installing-postgis)\n\nШаг 2 является опициональным, т.к. **PostGIS** можно установить, используя программу *Stack Builder*, входяющую в дистрибутив EDB\n\nПояснения в данной инструкции касаются операционной системы **Windows**, но на других ОС (*macOS, Linux*) все аналогично.\n\n## Файлы дистрибутива\n\nЕсли загрузка дистрибутивов прошла успешно, вы должны получить два установочных файла --- для **PostgreSQL** и **PostGIS**. Запускаем отсюда установщик **PostgreSQL.**\n\n![](images/pg/pg00.png)\n\n## Установка PostgreSQL\n\nНажимаем *Next*\n\n![](images/pg/pg01.png)\n\n## Установка PostgreSQL\n\nУстановочную директорию оставляем по умолчанию\n\n![](images/pg/pg02.png)\n\n## Установка PostgreSQL\n\nПункты списка оставляем по умолчанию (все)\n\n![](images/pg/pg03.png){width=\"100%\"}\n\n## Установка PostgreSQL\n\nДиректорию данных оставляем по умолчанию (но если на системном диске совсем мало места, то можно указать другую)\n\n![](images/pg/pg04.png)\n\n## Установка PostgreSQL\n\nПридумываем (**и запоминаем!**) пароль для базы данных `postgres`, которая будет автоматически создана после установки.\n\n![](images/pg/pg05.png)\n\n## Установка PostgreSQL\n\nПорт прослушивания оставляем по умолчанию --- `5432`\n\n![](images/pg/pg06.png)\n\n## Установка PostgreSQL\n\nСистемную локаль так же оставляем по умолчанию\n\n![](images/pg/pg07.png)\n\n## Установка PostgreSQL\n\nТеперь все готово к установке. Можно перепроверить данные, чтобы случайно не установить туда, куда не следует. После проверки жмем **Next**\n\n![](images/pg/pg08.png)\n\n## Установка PostgreSQL\n\nУстановка в процессе\n\n![](images/pg/pg09.png)\n\n## Stack Builder\n\nПосле установки вам предложат запустить **Stack Builder**.\n\n::: columns\n::: {.column width=\"40%\"}\nЗдесь у вас есть выбор:\n\n-   снять галочку, закрыть окно и запустить установку PostGIS из скачанного дистрибутива.\n\n-   воспользоваться **Stack Builder**.\n\nМы будем пользоваться **Stack Builder**, но если вы устанавливаете из скачанного дистрибутива, то переходите сразу к слайду @sec-pgis\n:::\n\n::: {.column width=\"60%\"}\n![](images/pg/pg10.png)\n:::\n:::\n\n## Установка PostGIS\n\nПри запуске Stack Builder надо выбрать только что установленный экземпляр PostgreSQL, который вещает на порту 5432\n\n![](images/pg/pg11.png)\n\n## Установка PostGIS\n\nОтыскиваем раздел **Spatial Extensions** и в нем ставим флажок *PostGIS*. Остальное не трогаем и идём дальше.\n\n![](images/pg/pg12.png)\n\n## Установка PostGIS\n\nВам предложат выбрать директорию для скачивания дистрибутива. Можете оставить по умолчанию или выбрать какую-то другую.\n\n![](images/pg/pg13.png)\n\n## Установка PostGIS\n\nПлосле скачивания флажок *Skip Installation* **НЕ** ставим и идем далее\n\n![](images/pg/pg14.png)\n\n## Установка PostGIS {#sec-pgis}\n\nВам привет от **PostGIS**\n\n![](images/pg/pg15.png)\n\n## Установка PostGIS\n\nСтавим все флажки кроме *Create spatial database*. Это мы сделаем вручную потом.\n\n![](images/pg/pg16.png)\n\n## Установка PostGIS\n\nУстановщик PostGIS должен автоматически определить каталог, в который у вас установлен PostgreSQL. Убедитесь, что это он (обычно проблем не бывает). После этого идем дальше\n\n![](images/pg/pg17.png)\n\n## Установка PostGIS\n\nВ конце установки отображается статус *Completed*. Закрываем окно\n\n![](images/pg/pg18.png)\n\n## Установка PostGIS\n\nИ закрываем *Stack Builder*\n\n![](images/pg/pg19.png)\n\n## Проверка PostgreSQL\n\nТеперь надо проверить, всё ли нормально установилось. Первым делом смотрим в диспетчере задач, выполняется ли служба `postgresql-x64-15`\n\n![](images/pg/pgis00.png)\n\n## Проверка PostgreSQL\n\nДалее отыскиваем в установленных программах **pgAdmin 4** и запускаем его\n\n![](images/pg/pgis01.png)\n\n## Проверка PostgreSQL\n\nСмотрим на красивый сплэш-скрин\n\n![](images/pg/pgis02.png)\n\n## Проверка PostgreSQL\n\nПо умолчанию pgAdmin подхватывает работающий экземпляр **PostgreSQL**\n\n![](images/pg/pgis03.png)\n\n## Проверка PostgreSQL\n\nЩелкните на нем дважды. Вас попросят ввести пароль (да-да, тот самый который надо было запомнить при установке)\n\n![](images/pg/pgis04.png)\n\n## Проверка PostgreSQL\n\nЕсли пароль введен правильно, вы увидите базу данных `postgres`\n\n![](images/pg/pgis05.png)\n\n## Проверка PostGIS\n\nТеперь надо проверить, что PostGIS доступен для активации. Щелкаем правой кнопкой мыши на пункте **Extensions** и выбираем *Create \\> Extension...*\n\n![](images/pg/pgis06.png)\n\n## Проверка PostGIS\n\nВ появившемся диалоге в поле **Name** набираем `gis` и убеждаемся, что среди отобранных расширений присутствует `postgis` и его друзья.\n\n![](images/pg/pgis07.png)\n\nЕсли да, то все в порядке. Можно закрывать диалог, ничего не создавая.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}