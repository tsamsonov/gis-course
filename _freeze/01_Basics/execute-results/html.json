{
  "hash": "0c8a6771f6f3987b9e79926d2df694f5",
  "result": {
    "markdown": "---\ntitle: \"Географическая информация и пространственные данные\"\nsubtitle: \"Основы геоинформатики. Лекция 1\"\ndate: 02/10/2023\ndate-format: long\nauthor: \"Самсонов Тимофей Евгеньевич\"\nexecute:\n  echo: false\n  freeze: true\nengine: knitr\nformat:\n  revealjs: \n    theme: [default, custom.scss]\n    margin: 0.2\n    slide-number: true\n    footer: \"Самсонов Т. Е. Основы геоинформатики: курс лекций для студентов географического факультета МГУ\"\n    header-includes: <link rel=\"stylesheet\" media=\"screen\" href=\"https://fontlibrary.org//face/pt-sans\" type=\"text/css\"/>\nbibliography: references.yaml\nmainfont: PT Sans\n---\n\n\n## Географическая информация\n\n::: columns\n::: {.column width=\"40%\"}\n![](images/image-1489181017.png)\n:::\n\n::: {.column width=\"60%\"}\n\nГеографическая информация [@gost:19105-2003]\n\n:   Информация об объектах и явлениях, содержащая в явном или неявном виде указание на их местоположение относительно Земли.\n\n**Пространственная привязка [@gost:70316-2022]**\n\n:   Описание позиции в реальном мире.\n:::\n:::\n\n## Пространственная привязка\n\n::: columns\n::: {.column width=\"50%\"}\n**Основные способы**\n\n1.  *Координаты* (59.926° с.ш., 30.339° в.д.)\n2.  *Индекс* (191002)\n3.  *Адрес* (Россия, г. Санкт-Петербург, улица Ломоносова, д.9)\n4.  *Место* (Центральный район)\n5.  *Объект* (корпус ИТМО)\n:::\n\n::: {.column width=\"50%\"}\n![](images/image-1646296081.png)\n:::\n:::\n\n## Пространственная привязка\n\n::: columns\n::: {.column width=\"50%\"}\n**Вспомогательные отношения**\n\n1.  *Пространственные* отношения\n\n    -   Метрические (600 метров от м. Владимирская)\n\n    -   Топологические (примыкает к детскому саду №78)\n\n    -   Дирекционные (на юго-восток от наб. Фонтанки)\n\n2.  *Временные* отношения (в 15 мин. пешком от Витебского вокзала)\n:::\n\n::: {.column width=\"50%\"}\n![](images/image-1646296081.png)\n:::\n:::\n\n## Географическая информация\n\n::: columns\n::: {.column width=\"50%\" style=\"color: blue; text-align: end;\"}\nДинамическая\n\nОперативная\n\nМассовая\n\nПотоковая\n\nРазнородная\n\nМногомерная\n\nМультимасштабная\n\nВолонтерская\n\nНеопределенная\n\nСинтезируемая\n:::\n\n::: {.column width=\"50%\" style=\"color: grey\"}\nСтатическая\n\nЭпизодическая\n\nНебольшого количества\n\nХранимая\n\nОднородная\n\nДвумерная, одномерная\n\nМономасштабная\n\nПрофессиональная\n\nОпределенная\n\nРеальная\n:::\n:::\n\n## Динамическая\n\nЧто может меняться у пространственного объекта?\n\n::: columns\n::: {.column width=\"30%\"}\n-   Геометрия\n\n-   Местоположение\n\n-   Внутренняя структура\n:::\n\n::: {.column width=\"70%\"}\n![Movebank --- трекинг перелетов птиц](images/image-1809566471.png)\n:::\n:::\n\n## Динамическая\n\n![Movebank --- трекинг перелетов птиц](images/image-42071914.png)\n\n## Movebank {.white-text background-video=\"videos/movebank.mp4\" background-video-muted=\"true\"}\n\n\n::: {.cell}\n<style type=\"text/css\">\n.white-text, \n.white-text h2 {\n color: white;\n text-shadow: 2px 2px 2px black;\n}\n</style>\n:::\n\n\n## Оперативная\n\nСервисы, основанные на местоположении (location-based services)\n\n![](images/image-1484920162.png)\n\n## Массовая\n\nГеографическая информация, генерируемая в большом объеме --- *большие данные (big data).*\n\n![](images/image-1116401456.png)\n\n## Потоковая\n\nГеографическая информация в процессе передачи.\n\n![](images/image-1157146301.png)\n\n## Векторные тайлы\n\nПотоковые данные визуализируются на устройстве-получателе.\n\n[![](images/image-1221494428.png)](https://www.mapbox.com)\n\n## Мультимасштабная\n\nГеографическая информация во множестве уровней детализации.\n\n::: columns\n::: {.column width=\"60%\"}\n![](images/image-1857551106.png)\n:::\n\n::: {.column width=\"40%\"}\n![](images/image-271468979.png)\n:::\n:::\n\n## Многомерная\n\nТрёхмерная, трёхмерно-динамическая\n\n[![](videos/ny-optimized.gif)](https://carto.com)\n\n## Волонтёрская\n\n*Volunteered geographic information (VGI)* --- географическая информация, создаваемая на добровольных началах\n\n[![Российская сеть изучения и охраны пернатых хищников](images/image-955729548.png)](http://rrrcn.ru)\n\n## OpenStreetMap\n\nOpenStreetMap (OSM) --- крупнейший проект в области VGI\n\n[![http://www.openstreetmap.org](images/image-1820088456.png)](http://www.openstreetmap.org)\n\n## OpenStreetMap {.white-text background-video=\"videos/osm-edits.mp4\" background-video-muted=\"true\"}\n\n## Неопределенная\n\nГеографическая информация, обладающая свойствами *непрецизионности, неточности и нечеткости.*\n\n::: columns\n::: {.column width=\"55%\"}\n![](images/image-288784986.png){fig-align=\"right\" width=\"100%\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/image-1877121026.png){fig-align=\"left\" width=\"77%\"}\n:::\n:::\n\n## Синтезируемая\n\nГеографическая информация, полученная путем геосимуляций, геовычислений, геомоделирования.\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/image-1127743790.png)\n:::\n\n::: {.column width=\"50%\"}\n![](images/image-2136309151.png)\n:::\n:::\n\n## Геоинформатика\n\nГеоинформатика (наука)\n\n:   Наука о географической информации, методах ее получения, представления, обработки, анализа и распространения.\n\n![](images/image-969426737.png){fig-align=\"center\" width=\"120%\"}\n\n::: callout-note\n## Приложения\n\nГеоинформатика позволяет изучать природные и социально-экономические геосистемы посредством компьютерного моделирования.\n:::\n\n## Пространственный объект\n\nПространственный объект [@gost:52438-2005]\n\n:   Цифровая модель материального или абстрактного объекта реального или виртуального мира с указанием его идентификатора, координатных и атрибутивных данных.\n\n::: callout-note\n## Примечание\n\n1.  Объектом может быть неподвижный или движущийся простой или сложный объект, явление, событие, процесс и ситуация.\n2.  Моделируемый объект может относиться к территории, акватории, недрам и воздушному пространству Земли, околоземному космическому пространству, другим космическим телам и небесной сфере.\n3.  В широком смысле под пространственным объектом в геоинформатике понимается как сам объект, так и адекватная ему цифровая модель.\n:::\n\n## Пространственные данные\n\nИнформация [@gost:7.0-99]\n\n:   Сведения, воспринимаемые человеком и (или) специальными устройствами как отражение фактов материального или духовного мира в процессе коммуникации.\n\nДанные [@gost:33707-2016]\n\n:   Представление информации в формальном виде, пригодном для передачи, интерпретации или обработки людьми или компьютерами.\n\nПространственные данные [@gost:52438-2005]\n\n:   Данные о пространственных объектах и их наборах.\n\n## Онтология понятий\n\n\n```{mermaid}\n%%| fig-width: 11\nflowchart LR\n  A(Информация) --> B(Данные)\n  C(Пространственный объект) --> D(Пространственные данные)\n  A --> E(Географическая информация)\n  B --> D\n  E -.-> D\n```\n\n\n::: callout-note\n## Примечание\n\n**Пространственные данные** можно определить также как представление *географической* информации в формальном виде, пригодном для передачи, интерпретации или обработки людьми или компьютерами.\n:::\n\n## Географическая информационная система (ГИС)\n\nИнформационная система [@gost:7.0-99]\n\n:   Система, предназначенная для хранения, обработки, поиска, распространения, передачи и представления информации\n\nГеографическая информационная система [@gost:52438-2005]\n\n:   Информационная система, оперирующая пространственными данными.\n\n::: callout-note\n## Уточнение\n\nГИС можно определить как систему, предназначенную для хранения, обработки, поиска, распространения, передачи и представления *географической* информации\n:::\n\n## Геоинформатика\n\nГеоинформатика (отрасль) [@gost:52438-2005]\n\n:   Научно-техническое направление, объединяющее:\n\n    -   теорию цифрового моделирования предметной области с использованием пространственных данных;\n    -   технологии создания и использования геоинформационных систем;\n    -   производство геоинформационной продукции и оказание геоинформационных услуг.\n\n::: callout-warning\n## Будьте осторожны\n\nВ других сферах деятельности под аббревиатурой ГИС может подразумеваться *геофизическое исследование скважин*, *государственная информационная система* и т.д.\n:::\n\n## Три уровня моделирования\n\n::: columns\n::: {.column width=\"10%\"}\n\n```{mermaid}\n%%| fig-width: 1\n%%| fig-height: 6\nflowchart TB\n  A((1)) ---> B((2))\n  B ---> C((3))\n```\n\n:::\n\n::: {.column width=\"90%\"}\n\nКонцептуальная модель [@gost:43.0.3-2009]\n\n:   Абстрактная модель, определяющая структуру исследуемого объекта (составные части и связи), свойства составных частей, причинно-следственные связи\n\nМодель пространственных данных [@lurie:2016]\n\n:   Набор логических правил формализованного цифрового описания объектов реальности как пространственных объектов.\n\nМодели пространственных объектов\n\n:   Геометрические примитивы, используемые для координатного описания пространственных объектов или их частей.\n:::\n:::\n\n## Концептуальные модели {.white-text background-image=\"images/image-1401221242.png\"}\n\nВ реальном мире существует бесконечное разнообразие явлений.\n\n## Концептуальные модели {.white-text background-image=\"images/image-633758101.png\"}\n\n**Объектно-ориентированная модель** используется когда явление интерпретируется как состоящее из дискретных объектов с четкими границами. *Характеристики объектов в пределах их границ предполагаются постоянными*.\\\n\\\n\\\n\\\n\\\n\\\n\\\n\n::: callout-tip\n## Пример\n\nЗдания имеют четкие границы и моделируются как отдельные объекты\n:::\n\n## Концептуальные модели {.white-text background-image=\"images/image-1627346778.png\"}\n\n**Сетевая модель** используется для интерпретации явлений, состоящих из множества связанных между собой объектов. *Сетевая модель является производной от объектно-ориентированной*.\n\n\\\n\\\n\\\n\\\n\\\n\\\n\\\n\n::: callout-tip\n## Пример\n\nАвтомобильные дороги образуют сетевую структуру\n:::\n\n## Концептуальные модели {.white-text background-image=\"images/image-1639184355.png\"}\n\n**Модель географических полей** используется для интерпретации явлений, *сплошным* образом покрывающих пространство. Как правило, моделируемая характеристика явления меняется *непрерывно*, но это не является обязательным условием.\n\n\\\n\\\n\\\n\\\n\\\n\\\n\n::: callout-tip\n## Пример\n\nЗемная поверхность имеет сплошной характер, ее высота меняется \\[не\\]прерывно\n:::\n\n## Концептуальные модели\n\nОсобенности концептуальных моделей географических явлений:\n\n1.  Всегда являются *упрощением* реальности.\n\n2.  Обобщают модели *картографической локализации* (по пунктам, на линиях, по площадям, рассеянной, сплошной).\n\n3.  Выбираются в соответствии с масштабом и целью исследования, а также способом *интерпретации* явления.\n\n    ::: callout-tip\n    ## Пример\n\n    Рельеф может рассматриватиься как совокупность форм (объектно-ориентированная модель) и как поверхность (модель географического поля).\n    :::\n\n4.  Определяют выбор *модели пространственных данных*.\n\n## Модели пространственных данных\n\nМодель пространственных данных задаётся отображением множества объектов на множество значений их атрибутов.\n\n::: columns\n::: {.column width=\"50%\"}\n**Простой** **объект** имеет одно значение каждого атрибута.\n\n::: callout-note\n## Вектор (vector)\n\nДанные, состоящие из простых объектов, называются **векторными**, т.к. с каждым объектом ассоциирован единственный *вектор* значений атрибутов.\n\n![](images/simple_feature.svg){width=\"100%\"}\n:::\n:::\n\n::: {.column width=\"50%\"}\n**Сложный** **объект** имеет множест-во значений каждого атрибута.\n\n::: callout-note\n## Покрытие (coverage)\n\nВ *каждой* точке, принадлежащей объекту, существует уникальное значение каждого атрибута. Его можно запросить с помощью функции, которая называется **покрытием**.\n\n![](images/complex_feature.svg){width=\"100%\"}\n:::\n:::\n:::\n\n## Векторная модель\n\n**Simple Features** --- стандарт @OGC2010, который определяет общую модель хранения и доступа к простым (векторным) объектам.\n\n-   все геометрии состоят из точек;\n-   все точки в геометрии имеют одинаковую размерность;\n-   размерность точек может быть 2, 3 или 4.\n\nВ дополнение к обязательным измерениям $X$ и $Y$ *возможны*:\n\n-   $Z$, обозначающее высоту\n-   $M$, обозначающее некоторую меру --- например, время\n\nСуществует 4 варианта координат: $XY$, $XYZ$, $XYM$ и $XYZM$.\n\nВ географических координатах $X$ --- долгота, $Y$ --- широта.\n\n## Векторная модель\n\nСтандарт включает в себя **17 моделей пространственных объектов**.\n\n::: columns\n::: {.column width=\"50%\"}\nОсновными являются 7 моделей:\n\n-   **Линейно связные**: `POINT`, `LINESTRING`, `POLYGON`\n-   **Линейно несвязные**: `MULTIPOINT`, `MULTIPOINT`, `MULTIPOLYGON`, `GEOMETRYCOLLECTION`\n:::\n\n::: {.column width=\"50%\"}\n::: callout-note\n## Линейная связность\n\nЛинейно связным называется пространство, в котором любые две точки можно соединить непрерывной кривой.\n\n![](images/connect.svg){width=\"60%\"}\n:::\n:::\n:::\n\nОставшиеся виды моделей включают: `CIRCULARSTRING`, `COMPOUNDCURVE`, `CURVEPOLYGON`, `MULTICURVE`, `MULTISURFACE`, `CURVE`, `SURFACE`, `POLYHEDRALSURFACE`, `TIN`, `TRIANGLE`.\n\n## Векторная модель\n\n![](images/simple_features.svg){width=\"100%\"}\n\n## Векторная модель\n\n**Линейно связные** модели пространственных объектов.\n\n| Тип          | Описание                                                                                                                                                                                                                                         |\n|------------|------------------------------------------------------------|\n| `POINT`      | нуль-мерная геометрия, содержащая одну точку                                                                                                                                                                                                     |\n| `LINESTRING` | последовательность точек, соединенных прямыми, несамопересекающимися отрезками; одномерная геометрия                                                                                                                                             |\n| `POLYGON`    | геометрия с положительной площадью (двумерная); последовательность точек, отрезки между которыми формируют замкнутое кольцо без самопересечений; первое кольцо является внешним, ноль и более остальных колец представляют дырки внутри полигона |\n\n## Векторная модель\n\n**Линейно несвязные** модели пространственных объектов.\n\n| Тип                  | Описание                                                                                                              |\n|----------------|--------------------------------------------------------|\n| `MULTIPOINT`         | множество точек; геометрия типа `MULTIPOINT` называется *простой* если ни одна пара точек в `MULTIPOINT` не совпадает |\n| `MULTILINESTRING`    | множество линий                                                                                                       |\n| `MULTIPOLYGON`       | множество полигонов                                                                                                   |\n| `GEOMETRYCOLLECTION` | множество геометрий произвольного типа за исключением `GEOMETRYCOLLECTION`                                            |\n\n## Хранение координат\n\n\n::: {.cell}\n\n:::\n\n\n**Well-Known Text (WKT)** --- текстовый формат\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nPOINT (0.5 0.5)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nLINESTRING (0 1, 0.5 1.5, 1.2 1.2, 2 1.3, 3 2)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nPOLYGON ((0.5 0.5, 2 0, 3 2, 1.5 4, 0 3, 0.5 0.5), (1 1, 0.8 2, 2 2.2, 1.4 1.1, 1 1))\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nMULTIPOINT ((0.5 0.5), (1 3), (2 1), (0.2 2), (2 3), (1.5 1.5))\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nMULTILINESTRING ((0.5 1.5, 1.2 1.2, 2 1.3), (0 1.5, 0.5 2, 1.2 1.7), (2 1.8, 3 2.5))\n```\n:::\n:::\n\n\n::: callout-note\n## Назначение\n\nФормат **WKT** используется в текстовых форматах файлов, а также для визуального анализа координат объектов. Он занимает много места в памяти компьютера и медленно читается/записывается программами.\n:::\n\n## Хранение координат\n\n**Well-Known Binary (WKB)** --- бинарный формат\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nPOINT: 01 01 00 00 00 00 00 00 00 00 00 e0 3f 00 00 00 00 00 00 e0 3f\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nLINESTRING: 01 02 00 00 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f0 3f 00 00 00 00 00 00 e0 3f 00 00 00 00 00 00 f8 3f 33 33 33 33 33 33 f3 3f 33 33 33 33 33 33 f3 3f 00 00 00 00 00 00 00 40 cd cc cc cc cc cc f4 3f 00 00 00 00 00 00 08 40 00 00 00 00 00 00 00 40\n```\n:::\n:::\n\n\n::: callout-note\n## Назначение\n\nФормат **WKB** используется в бинарных форматах файлов, в том числе а базах данных. Он занимает мало места в памяти компьютера и быстро читается/записывается программами, но не подходит для визуального анализа.\n:::\n\n## Особенности векторной модели\n\n1.  Используется для реализации объектно-ориентированной концептуальной модели.\n2.  Основана на генерализации. Физическое или абстрактное тело представляется в виде конечного множества координат.\n3.  В зависимости от уровня детализации один и тот же объект может представляться с помощью разной модели.\n4.  Значения атрибутов в пределах границ каждого объекта предполагаются постоянными.\n\n::: callout-warning\n## Ограничение\n\nВекторная модель не годится для представления *географических полей*.\n:::\n\n## Модель покрытий\n\n::: columns\n::: {.column width=\"60%\"}\nМодель покрытий предполагает, что можно представить поле изменения атрибутов внутри объектов.\n\n::: callout-important\n## Однако есть проблема\n\n::: columns\n::: {.column width=\"20%\"}\n![](images/rick_thinking.png)\n:::\n\n::: {.column width=\"80%\"}\nГеографические поля определены на бесконечном множестве точек, в то время как любые модели данных состоят из конечного числа элементов. Как обойти это ограничение?\n:::\n:::\n:::\n:::\n\n::: {.column width=\"40%\"}\n![](images/transform_cov.svg){width=\"45%\"}\n:::\n:::\n\n::: callout-tip\n## Решение\n\nНеобходимо внутри объекта создать сетку опорных геометрий и определить функцию, которая сможет интерполировать значения между ними.\n:::\n\n## Топологическое покрытие\n\nПостроение покрытия начинается с простого объекта, обозначающего границу покрытия.\n\n![](images/cov_details_1.svg){width=\"100%\"}\n\n## Топологическое покрытие\n\nВ **топологическом покрытии** объект разрезается узлами и дугами на области фиксированных значений поля.\n\n![](images/cov_details_3.svg){width=\"100%\"}\n\n## Топологическое покрытие\n\n**Функция покрытия** в каждой точке возвращает значение полигона, который её *покрывает*. Покрытие является сплошным.\n\n![](images/cov_details_4.svg){width=\"100%\"}\n\n## Топологическое покрытие\n\n::: columns\n::: {.column width=\"65%\"}\nЭлементы топологической модели имеют свои названия.\n\n![](images/cov_details_5.svg){width=\"100%\"}\n:::\n\n::: {.column width=\"35%\"}\n::: callout-caution\n## Ограничение\n\nТопологическая модель подходит только для представления полей с пространственной структурой в виде областей фиксированных значений.\n:::\n:::\n:::\n\n## Триангуляционное покрытие\n\nПостроение покрытия начинается с простого объекта.\n\n![](images/tin_details_1.svg){width=\"100%\"}\n\n## Триангуляционное покрытие\n\nВ объект добавляются известные значения геополя в точках.\n\n![](images/tin_details_2.svg){width=\"100%\"}\n\n## Триангуляционное покрытие\n\nТочки данных соединяются *сплошной* сеткой треугольников --- **триангуляцией**.\n\n![](images/tin_details_3.svg){width=\"100%\"}\n\n## Триангуляционное покрытие\n\n**Функция покрытия** реализуется путем *интерполяции* (линейной, естественной и т.д.) поля внутри треугольников.\n\n![](images/tin_details_4.svg){width=\"100%\"}\n\n## Триангуляционное покрытие\n\nУ каждого узла есть область влияния. Совокупность таких областей называется **диаграммой Вороного**.\n\n![](images/tin_details_5.svg){width=\"100%\"}\n\n## Триангуляционное покрытие\n\nДиаграмма Вороного дает альтернативную функцию покрытия, в которой поле считается *постоянным* в пределах областей.\n\n![](images/tin_details_6.svg){width=\"100%\"}\n\n## Диаграмма Вороного\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/voronoy.gif)\n:::\n\n::: {.column width=\"50%\"}\n\nДиаграмма Вороного\n\n:   Диаграмма Вороного конечного множества точек $S$ на плоскости представляет такое разбиение плоскости, при котором каждая область этого разбиения образует множество точек, более близких к одному из элементов множества $S$, чем к любому другому элементу множества.\n:::\n:::\n\n## Триангуляционное покрытие\n\nЭлементы триангуляционной модели имеют свои названия.\n\n![](images/tin_details_7.svg){width=\"100%\"}\n\n## Растровое покрытие\n\nВ растровом покрытии множество узлов с данными поля упорядочивается в виде матрицы --- **растра**.\n\n![](images/raster_details_1.svg){width=\"100%\"}\n\n## Растровое покрытие\n\nСетка четырехугольников на узлах с данными обеспечивает сплошное покрытие объекта.\n\n![](images/raster_details_2.svg){width=\"100%\"}\n\n## Растровое покрытие\n\nФункция покрытия реализуется путем *интерполяции* (билинейной, кубической и т.д.) внутри четырехугольников.\n\n![](images/raster_details_3.svg){width=\"100%\"}\n\n## Растровое покрытие\n\nУ каждого узла растра есть ассоциированная с ним зона влияния --- **пиксель**.\n\n![](images/raster_details_4.svg){width=\"100%\"}\n\n## Растровое покрытие\n\nПиксельное представление даёт альтернативную функцию покрытия, в которой поле считается *постоянным* в пикселе.\n\n![](images/raster_details_5.svg){width=\"100%\"}\n\n## Растровое покрытие\n\nЭлементы растровой модели имеют свои названия.\n\n![](images/raster_details_6.svg){width=\"100%\"}\n\n## Сравнение моделей покрытий\n\n::: columns\n::: {.column width=\"65%\"}\n![](images/raster_tin.svg){width=\"100%\"}\n:::\n\n::: {.column width=\"35%\"}\nМодели покрытий имеют схожие элементы, но их названия различны.\n\nОднако точки данных всегда называются **узлами**.\n\n::: callout-note\n## TIN\n\nТриангуляцию сокращенно называют TIN (Triangular Irregular Network)\n:::\n:::\n:::\n\n## Преимущества моделей\n\n::: columns\n::: {.column width=\"50%\"}\n**Растр**\n\n1.  Регулярная матричная структура, позволяющая унифицировать операторы обработки данных.\n2.  Компактное хранение (достаточно указать местоположение угла растра).\n3.  Соответствие устройству матрицы сканерных снимков.\n:::\n\n::: {.column width=\"50%\"}\n**TIN**\n\n1.  Иррегулярная структура, позволяющая уплотнять данные в областях высокой изменчивости поля.\n2.  Более точное взаимодействие с векторными данными, в т.ч. совместный анализ.\n3.  Соответствие устройству трёхмерных моделей.\n:::\n:::\n\n## Геометрия растра\n\n**Геометрия растра** определяет, где именно располагаются в пространстве узлы и может быть описана параметрами:\n\n| Параметр    | Назначение                              |\n|-------------|-----------------------------------------|\n| `NCOLS`     | Количество столбцов                     |\n| `NROWS`     | Количество строк                        |\n| `XLLCENTER` | Координата $X$ левого нижнего узла      |\n| `YLLCENTER` | Координата $Y$ левого нижнего узла      |\n| `CELLSIZE`  | Размер ячейки (расстояние между узлами) |\n\n::: callout-important\n## Обратите внимание\n\nРастр может иметь разное расстояние между узлами по осям $X$ и $Y$. В этом случае вместо `CELLSIZE` указывается два параметра: `CELLSIZEX` и `CELLSIZEY` .\n:::\n\n## Пространственная привязка\n\n**Пространственная привязка [@gost:70316-2022]**\n\n:   Описание позиции в реальном мире.\n\nПространственная привязка может быть осуществлена двумя основными способами:\n\n-   с использованием координат;\n-   посредством географических идентификаторов.\n\n::: callout-important\n## Система координат\n\nПри использовании привязки по координатам необходимо описание системы координат.\n:::\n\n## Система координат\n\nПри описании системы координат последовательно указываются:\n\n1.  **Эллипсоид вращения** --- тело, по отношению к которому вычисляются геодезические координаты точек (широта, долгота)\n2.  **Исходные геодезические даты (датум)** --- параметры положения эллипсоида в теле Земли\n3.  **Географическая система координат** --- включает датум, положение начального меридиана и единицы измерения широт и долгот\n4.  **Проекция** --- математический способ перехода от геодезических (географических) координат к плоским прямоугольным.\n5.  **Плоская прямоугольная система координат** --- включает проекцию, ее параметры и единицы измерения координат.\n\n## Форматы описания СК\n\nРаспространены 3 формата описания системы координат (СК):\n\n-   **PROJ.4 String** --- представление в виде строки параметров.\n\n-   **WKT (Well-Known Text)** --- представление в виде иерархического списка. Это *наиболее полный* формат описания системы координат, который рекомендуется к использованию для избежания неоднозначностей.\n\n-   **EPSG (European Petroleum Survey Group)** --- представление в виде числового кода.\n\n::: callout-tip\n## Где найти описания СК?\n\nДля поиска проекций в перечисленных форматах представления удобно воспользоваться порталом **spatialreference.org**.\n:::\n\n## PROJ.4 String\n\n\n::: {.cell}\n<style type=\"text/css\">\n.code-block {\n max-height: 600px;\n scrollable: false\n}\n</style>\n:::\n\n\n**PROJ.4 String** --- строковый формат представления информации о системе координат, введенный в библиотеке [**PROJ**](http://proj.org), начиная с версии 4. Основные параметры:\n\n``` code-block\n+datum     Датум\n+ellps     Эллипсоид\n+lat_0     Широта стандартной параллели\n+lat_1     Широта первой стандартной параллели\n+lat_2     Широта второй стандартной параллели\n+lat_ts    Широта нулевых искажений\n+lon_0     Центральный меридиан\n+proj      Проекция\n+units     Единицы измерения координат\n+vunits    Единицы измерения высот\n+x_0       Восточное указание\n+y_0       Северное указание\n+zone      Номер зоны\n```\n\n## PROJ.4 String --- примеры\n\n-   Географические координаты в СК **WGS84** (без проекции):\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n+proj=longlat +datum=WGS84 +no_defs\n```\n:::\n:::\n\n\n-   Проекция **Web Mercator** (Google Maps, Яндекс.Карты и т.д.):\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n+proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\n```\n:::\n:::\n\n\n-   **Коническая равнопромежуточная** проекция:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n+proj=eqdc +lat_0=0 +lon_0=0 +lat_1=60 +lat_2=60 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\n```\n:::\n:::\n\n\n-   Проекция **UTM, зона 37**:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n+proj=utm +zone=37 +datum=WGS84 +units=m +no_defs\n```\n:::\n:::\n\n\n## WKT (Well-Known Text)\n\n**WKT** хранит описания СК в виде иерархического списка:\n\n``` {.code-block style=\"font-size: 0.62em;\"}\nPROJCS[\"WGS 84 / EPSG Russia Polar Stereographic\",\n    GEOGCS[\"WGS 84\",\n        DATUM[\"WGS_1984\",\n            SPHEROID[\"WGS 84\",6378137,298.257223563,\n                AUTHORITY[\"EPSG\",\"7030\"]],\n            AUTHORITY[\"EPSG\",\"6326\"]],\n        PRIMEM[\"Greenwich\",0,\n            AUTHORITY[\"EPSG\",\"8901\"]],\n        UNIT[\"degree\",0.0174532925199433,\n            AUTHORITY[\"EPSG\",\"9122\"]],\n        AUTHORITY[\"EPSG\",\"4326\"]],\n    PROJECTION[\"Polar_Stereographic\"],\n    PARAMETER[\"latitude_of_origin\",90],\n    PARAMETER[\"central_meridian\",105],\n    PARAMETER[\"scale_factor\",0.994],\n    PARAMETER[\"false_easting\",2000000],\n    PARAMETER[\"false_northing\",2000000],\n    UNIT[\"metre\",1,\n        AUTHORITY[\"EPSG\",\"9001\"]],\n    AXIS[\"X\",EAST],\n    AXIS[\"Y\",NORTH],\n    AUTHORITY[\"EPSG\",\"5940\"]]\n```\n\n*Полярная стереографическая проекция*\n\n## EPSG\n\n**EPSG (European Petroleum Survey Group)** --- европейская рабочая группа нефтегазовой области, которая ведет реестр систем координат с уникальными цифровыми кодами вида `EPSG:xxxxxx`.\n\nКоды EPSG оказались удобны, поэтому используются повсеместно для быстрой инициализации проекций со стандартными параметрами.\n\nНапример, ранее рассмотренные проекции имеют коды:\n\n-   *WGS84*: `EPSG:4326`\n-   *Web Mercator*: `EPSG:3857`\n-   *UTM*: `EPSG:326..` , например для UTM 37N: `EPSG:32637`\n\n## spatialreference.org\n\nУдобный ресурс для поиска описаний систем координат\n\n![](images/image-1882413297.png)\n\n## proj.org\n\nСайт библиотеки PROJ имеет описания проекций\n\n![](images/image-69855955.png)\n\n`Coordinate operations —> Projections`\n\n## Операции с системами координат\n\nПри работа с пространственными данными используется 4 основных операции над системами координат:\n\n1.  **Создание** --- позволяет сопроводить данные информацией о том, в какой системе хранятся координаты объектов.\n\n2.  **Переопределение** --- используется в случае, если СК указана неправильно. Например, данные хранятся в градусах, а в параметрах указано, что это проекция Меркатора.\n\n3.  **Чтение** --- используется программным обеспечением для того чтобы правильно позиционировать объекты относительно референцного тела (Земли).\n\n4.  **Преобразование** --- используется для получения нового набора данных в другой системе координат.\n\n## Преобразование координат\n\n::: columns\n::: {.column width=\"55%\"}\nПреобразование координат включает три различных операции:\n\n1.  **Трансформирование** --- пересчет географических координат с одного датума на другой.\n\n2.  **Проецирование** --- от географических координат к плоским прямоугольным.\n\n3.  **Обратное проецирование** --- от плоских прямоугольных координат к географическим.\n:::\n\n::: {.column width=\"45%\"}\n\n```{mermaid}\n%%| fig-width: 2.8\nflowchart TB\n  A(UTM) -- Обратное проецирование --> B(WGS84)\n  subgraph gcs [ ]\n  B -- Трансформирование --> C(ГСК-2011)\n  end\n  C -- Проецирование --> В(Гаусса-Крюгера)\n```\n\n:::\n:::\n\n## projectionwizard.org\n\nВеб-приложение для выбора оптимальной проекции\n\n![](images/image-634598051.png)\n\n## Координатная привязка\n\nКоординатная привязка\n\n:   Преобразование координат, которое привязывает пространст-венные объекты к их местоположению в реальном мире.\n\n::: callout-tip\n## Когда нужна координатная привязка?\n\n1.  Информация о СК отсутствует или ошибочна *(например --- сканированная карта)*.\n2.  Информация о СК имеется, но координаты объектов искажены и требуют корректировки *(например, есть систематическая ошибка в измерениях)*.\n:::\n\n::: callout-note\n## Регистрация\n\nПроцесс координатной привязки также называют **регистрацией**.\n:::\n\n## Опорные точки\n\nКоординатная привязка выполняется по **опорным точкам**.\n\n::: columns\n::: {.column width=\"60%\"}\n![](images/control_pts.svg){width=\"100%\"}\n:::\n\n::: {.column width=\"40%\"}\nНеобходимо указать несколько пар точек.\n\nКаждая пара создается в следующем порядке:\n\n-   сначала в текущем положении (**p**)\n\n-   затем в истинном положении (**q**).\n:::\n:::\n\nПолученные вектора используются для трансформации координат.\n\n## Аффинное преобразование\n\nАффинное преобразование\n\n:   Отображение плоскости или пространства в себя, при котором параллельные прямые переходят в параллельные прямые, пересекающиеся --- в пересекающиеся, скрещивающиеся --- в скрещивающиеся\n\nПозволяет решать простые случаи привязки:\n\n![](images/affine.svg){width=\"100%\"}\n\n## Неаффинные преобразования\n\nВ тех случаях, когда аффинных преобразований недостаточно, могут быть использованы более сложные:\n\n![](images/nonaffine.svg){width=\"100%\"}\n\nМетод резинового листа является наиболее гибким и позволяет делать локализованные трансформации объектов (изображений).\n\n## Опорные точки\n\nПринципы выбора опорных точек:\n\n1.  **Количество точек должно быть *больше* минимально необходимого**. Это позволит оценить погрешность трансформации. Например для аффинного преобразования вместо 3 желательно набрать как минимум 4 точки.\n2.  **Точки должны располагаться относительно равномерно** по полю привязываемого объекта. Необходимы точки как по краям, так и в центре.\n3.  **Точки не должны *все* располагаться на одной прямой**. Чем сильнее точки тяготеют к такой конфигурации, тем хуже будет качество привязки.\n\n## Словарик\n\n::: columns\n::: {.column width=\"50%\" style=\"color: blue; text-align: end;\"}\nГеоинформатика\n\nПространственная привязка\n\nПространственный объект\n\nПространственные данные\n\nВекторные данные\n\nРастровые данные\n\nПокрытие\n\nСистема координат\n\nКоординатная привязка\n\nАффинное преобразование\n:::\n\n::: {.column width=\"50%\" style=\"color: red\"}\nGeographical information science\n\nSpatial reference\n\nFeature\n\nSpatial data\n\nVector data\n\nRaster data\n\nCoverage\n\nCoordinate reference system\n\nGeoreferencing\n\nAffine transformation\n:::\n:::\n\n## Зачет по курсу\n\nВ курсе предусмотрено 4 вида контроля:\n\n| \\#  | Вид контроля           | Время             |\n|-----|------------------------|-------------------|\n| 1   | Практические работы    | Весь семестр      |\n| 2   | Самостоятельная работа | Середина семестра |\n| 3   | Контрольное задание    | Конец семестра    |\n| 4   | Теоретический тест     | Зачетная сессия   |\n\nЕсли по всем пунктам имеется зачёт, то вы имеете зачет по курсу.\n\n## Библиография\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}