{
  "hash": "bd49270e5120d225ce2f39799d7867b0",
  "result": {
    "markdown": "---\ntitle: \"Введение\"\nsubtitle: \"Геоинформатика I. Базы пространственных данных\"\ndate: today\ndate-format: long\nauthor: \"Самсонов Тимофей Евгеньевич\"\nexecute:\n  echo: false\n  freeze: true\nengine: knitr\nformat:\n  revealjs: \n    theme: [default, custom.scss]\n    margin: 0.2\n    width: 1280\n    height: 720\n    slide-number: true\n    footer: \"Самсонов Т. Е. Геоинформатика: курс лекций\"\n    header-includes: <link rel=\"stylesheet\" media=\"screen\" href=\"https://fontlibrary.org//face/pt-sans\" type=\"text/css\"/>\nbibliography: references.yaml\nmainfont: PT Sans\n---\n\n\n## Геоинформатика\n\n![](images/semesters.png)\n\n## База пространственных данных\n\nБаза пространственных данных [@gost:52438-2005]\n\n:   Совокупность пространственных данных, организованных по определенным правилам, устанавливающим общие принципы описания, хранения и манипулирования данными, предназначенная для удовлетворения информационных потребностей пользователя.\n\n::: callout-warning\n## Жаргон\n\nНе рекомендуются к использованию словосочетания: база геоданных, пространственная база данных, база данных ГИС\n:::\n\n## Пространственный объект\n\nПространственный объект [@gost:52438-2005]\n\n:   Цифровая модель материального или абстрактного объекта реального или виртуального мира с указанием его идентификатора, координатных и атрибутивных данных.\n\n![](images/feature.svg){fig-align=\"center\" width=\"100%\"}\n\n## Эволюция моделей СУБД\n\n\n```{mermaid}\n%%| fig-width: 11\nflowchart TB\n  A(Файловые) --> B(Сетевые)\n  A --> C(Иерархические)\n  C --> D(Реляционные / РСУБД)\n  B --> D\n  E(Объектно-ориентированные / ООСУБД) --> F(Объектно-Реляционные / ОРСУБД)\n  D --> F\n```\n\n\n## Пространственные данные в РСУБД\n\n\n::: {.cell}\n\n:::\n\n\n::: columns\n::: {.column width=\"40%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](adv_01_Intro_files/figure-revealjs/unnamed-chunk-3-1.png){width=400px height=400px}\n:::\n:::\n\n\nПредставление в обычной РСУБД достаточно громоздко\n:::\n\n::: {.column width=\"60%\"}\n| Name  | Area | Price  | BoundaryID |\n|-------|------|--------|------------|\n| Уч. 2 | 37.0 | 560000 | 1055       |\n\n: Parcels\n\n| BoundaryID | Edge |\n|------------|------|\n| 1055       | A    |\n| 1055       | B    |\n| 1055       | C    |\n| 1055       | D    |\n| 1055       | E    |\n\n: Polygons\n:::\n:::\n\n## Пространственные данные в РСУБД\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](adv_01_Intro_files/figure-revealjs/unnamed-chunk-4-3.png){width=400px height=400px}\n:::\n:::\n\n\nПредставление в обычной РСУБД достаточно громоздко\n:::\n\n::: {.column width=\"25%\"}\n| Edge | Point |\n|------|-------|\n| A    | 1     |\n| A    | 2     |\n| B    | 2     |\n| B    | 3     |\n| C    | 3     |\n| C    | 4     |\n| D    | 4     |\n| D    | 5     |\n| E    | 5     |\n| E    | 1     |\n\n: Edges\n:::\n\n::: {.column width=\"25%\"}\n| Point | X   | Y   |\n|-------|-----|-----|\n| 1     | 5   | 0   |\n| 2     | 0   | 5   |\n| 3     | 3   | 9   |\n| 4     | 8   | 8   |\n| 5     | 6   | 4   |\n\n: Points\n:::\n:::\n\n## Пространственные данные в РСУБД\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](adv_01_Intro_files/figure-revealjs/unnamed-chunk-5-5.png){width=400px height=400px}\n:::\n:::\n\n\nПредставление в обычной РСУБД достаточно громоздко\n:::\n\n::: {.column width=\"50%\"}\n\n```{mermaid}\n%%| fig-width: 2\nflowchart TB\n  A(Parcels) --> B(Polygons)\n  B --> C(Edges)\n  C --> D(Points)\n```\n\n:::\n:::\n\n## Абстрактные типы данных\n\nВажное наследие объектно-ориентированных систем --- поддержка абстрактных типов данных.\n\n::: columns\n::: {.column width=\"45%\"}\n*Примитивные типы данных* составляют основу реляционных БД. ![](images/elementary_types.svg){width=\"90%\"}\n:::\n\n::: {.column width=\"55%\"}\n*Абстрактные типы данных (АТД)* обеспечивают хранение коллекций и объектов со свойствами. ![](images/abstract_types.svg){width=\"100%\"}\n:::\n:::\n\nБольшинство ОРСУБД предлагают модульный подход к АТД, позволяя добавлять и удалять их.\n\n## Пространственная СУБД\n\nАбстрактные типы данных --- основа реализации пространственных СУБД.\n\nПСУБД должна отвечать следующим требованиям:\n\n1.  Представляет собой программный модуль, взаимодействующий с нижестоящей СУБД или являющийся ее компонентой\n2.  Поддерживает множественные модели пространственных данных, соответствующие им абстрактные типы данных, а также язык запросов, из которого эти типы могут быть вызваны.\n3.  Реализует пространственное индексирование, эффективные алгоритмы пространственных операций и специальные правила оптимизации запросов.\n\n## Пространственная СУБД\n\nОсновные аспекты функционирования ПСУБД:\n\n1.  Модели пространственных данных и пространственных отношений.\n2.  Язык запросов\n3.  Обработка и оптимизация запросов\n4.  Организация файлового хранилища\n5.  Выполнение аналитических операций (добыча данных).\n\n## Модели пространственных данных\n\n![](images/basic_primitives.svg){width=\"100%\"}\n\nАбстрактные типы данных в ПСУБД реализуют различные модели пространственных данных\n\n## Пространственные отношения\n\n![](images/sp_relations.svg){width=\"100%\"}\n\nПространственные запросы в ПСУБД опираются на модели пространственных отношений\n\n## Язык запросов\n\n**Structured Query Language (SQL)** --- язык структурированных запросов. Применяется для создания, модификации и управления данными в реляционной базе данных.\n\nПространственная СУБД поддерживает создание и манипулирование пространственными типами данных:\n\n``` small\nSELECT 'SRID=4326;POINT(-123 34)'::geography\n\"0101000020E61000000000000000C05EC00000000000004140\"\n\nCREATE TABLE geotable(gid serial PRIMARY KEY, name TEXT, geom geography(POINT) );\n\nINSERT INTO geotable ( name, geom )\n  VALUES ( ST_GeomFromEWKT('SRID=312;POINTM(-126.4 45.32 15)'), 'A Place' )\n```\n\n## Пространственные расширения SQL\n\n``` small\nSELECT\n  m.name,\n  SUM(ST_Length(r.geom))/1000 as roads_km\nFROM bc_roads AS r\nJOIN bc_municipality AS m\n  ON ST_Contains(m.geom, r.geom)\nGROUP BY m.name\nORDER BY roads_km;\n\nname                        | roads_km\n----------------------------+------------------\nSURREY                      | 1539.47553551242\nVANCOUVER                   | 1450.33093486576\nLANGLEY DISTRICT            | 833.793392535662\nBURNABY                     | 773.769091404338\nPRINCE GEORGE               | 694.37554369147\n...\n```\n\n## Обработка запросов\n\n![](images/query_plan.svg){width=\"100%\"}\n\n-   SQL --- декларативный язык. Он описывает *что* необходимо получить, но не *как*, т.е. не сам алгоритм выполнения процедуры.\n\n-   СУБД должна самостоятельно определить план эффективного выполнения запроса.\n\n-   Обработка запроса представляет собой последовательность шагов, которую инициирует СУБД для выполнения запроса.\n\n-   Оптимизация пространственных запросов обладает своей спецификой\n\n## Обработка запросов\n\n``` small\nSELECT\nFROM reltypes R, soiltypes S\nWHERE st_area(S.geom) < 10000 AND st_area(R.geom) < 10000\nAND st_intersects(R.geom, s.geom)\n```\n\n![](images/filter_refine.svg){width=\"100%\"}\n\nПространственный запрос состоит из фильтрации (`FILTER`) на основе MBR и уточнения (`REFINE`) по реальной геометрии.\n\n## Хранение данных\n\nДанные в файлах имеют одномерное упорядочение. Однако записи можно хранить так чтобы пространственно близкие располагались ближе друг к другу\n\n![](images/ordering_comp1.svg){width=\"100%\"}\n\n## Хранение данных\n\nДанные в файлах имеют одномерное упорядочение. Однако записи можно хранить так чтобы пространственно близкие располагались ближе друг к другу\n\n![](images/ordering_comp2.svg){width=\"100%\"}\n\n## Оптимизация запросов\n\n**Непространственный запрос** *`Выбери всех школьников 10 класса, которые являются призерами всероссийской олимпиады по географии`* раскладывается на 2 подзапроса:\n\n-   **ПРОЕКЦИЯ** (single-scan): выбрать всех школьников 10 класса\n\n-   **СОЕДИНЕНИЕ** (multi-scan): сопоставить таблицу призеров и таблицу школьников\n\n::: callout-note\n## Последовательность\n\nСначала должен быть выполнен запрос проекции, т.к. соединение является более ресурсоемкой многопроходной (*multiscan*) операцией\n:::\n\n## Оптимизация запросов\n\n**Пространственный запрос** *`Выбери все регионы с площадью более 100 тыс. кв. км, в которых проходил заключительный этап всероссийской олимпиады школьников по географии`* раскладывается на 2 подзапроса:\n\n-   **ДИАПАЗОН** (single-scan): выбрать регионы с площадью более $100$ тыс. кв. км\n\n-   **ПРОСТРАНСТВЕННОЕ СОЕДИНЕНИЕ** (multi-scan): выбрать регионы, в которых находятся города проведения заключительного этапа\n\n::: callout-note\n## Последовательность\n\nПоследовательность не очевидна, т.к. вычисление площади --- ресурсоемкая операция. Порядок выполнения пространственных запросов требует тщательного анализа.\n:::\n\n## Добыча данных\n\n**Базы *\\[пространственных\\]* данных** --- источник информации, который требует особого подхода в силу потенциального объема информации и способов взаимодействия с нею.\n\n1.  Алгоритмы для больших данных, или решения, позволяющие совмещать аналитику данных и технологии обработки больших массивов информации.\n2.  Расширение функциональности языка запросов --- возможность выполнять пространственную аналитику данных \"на лету\".\n\n::: callout-note\n## Пример\n\nПространственно-временные базы данных абонентов сотовой сети могут содержать терабайты информации. Как сделать равномерную случайную выборку?\n:::\n\n## Библиография\n",
    "supporting": [
      "adv_01_Intro_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}