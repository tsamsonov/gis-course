{
  "hash": "18388e0f708c1667025b9f24b7585360",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Базы пространственных данных\"\nsubtitle: \"Основы геоинформатики. Лекция 3\"\ndate: 03/01/2024\ndate-format: long\nauthor: \"Самсонов Тимофей Евгеньевич\"\nexecute:\n  echo: false\n  freeze: true\nengine: knitr\nformat:\n  revealjs: \n    theme: [default, custom.scss]\n    margin: 0.2\n    slide-number: true\n    footer: \"Самсонов Т. Е. Основы геоинформатики: курс лекций\"\n    header-includes: <link rel=\"stylesheet\" media=\"screen\" href=\"https://fontlibrary.org//face/pt-sans\" type=\"text/css\"/>\nbibliography: references.yaml\nmainfont: PT Sans\n---\n\n\n## Пространственный объект\n\nПространственный объект [@gost:52438-2005]\n\n:   Цифровая модель материального или абстрактного объекта реального или виртуального мира с указанием его идентификатора, координатных и атрибутивных данных.\n\n![](images/feature.svg){fig-align=\"center\" width=\"100%\"}\n\n::: callout-tip\n## База пространственных данных\n\nЗадача базы пространственных данных --- организовать хранение пространственных объектов так чтобы их можно было использовать для решения задач.\n:::\n\n## База пространственных данных\n\nБаза пространственных данных [@gost:52438-2005]\n\n:   Совокупность пространственных данных, организованных по определенным правилам, устанавливающим общие принципы описания, хранения и манипулирования данными, предназначенная для удовлетворения информационных потребностей пользователя.\n\n::: callout-warning\n## Жаргон\n\nНе рекомендуются к использованию словосочетания: база геоданных, пространственная база данных, база данных ГИС\n:::\n\n## Модели баз данных\n\n::: columns\n::: {.column width=\"50%\"}\n**Иерархическая модель** --- представление базы данных в виде древовидной структуры, состоящей из иерархически соподчиненных объектов.\n\n::: callout-warning\n## Ограничения\n\n-   cложность добавления и удаления элементов;\n\n-   необходимость любые концепции представлять в виде иерархии.\n\n-   есть связи $1:1$ и $1:N$, но нет связей $M:N$.\n:::\n:::\n\n::: {.column width=\"50%\"}\n![Полярные арктические метеостанции](images/hierarchical_db.svg){width=\"100%\"}\n:::\n:::\n\n## Модели баз данных\n\n::: columns\n::: {.column width=\"50%\"}\n**Сетевая модель** --- представление базы данных в виде графовой структуры, состоящей из связанных объектов.\n\n::: callout-warning\n## Ограничения\n\n-   cложность добавления и удаления элементов;\n\n-   необходимость любые концепции представлять в виде графа.\n:::\n:::\n\n::: {.column width=\"50%\"}\n![Полярные арктические метеостанции](images/network_db.svg){width=\"100%\"}\n:::\n:::\n\n## Модели баз данных\n\n::: columns\n::: {.column width=\"50%\"}\n**Реляционная модель** --- представление базы данных в виде совокупности таблиц.\n\n::: callout-tip\n## Преимущества\n\n-   нет необходимости явных связей;\n\n-   возможность представлять практически любые сущности и их отношения.\n:::\n\n::: callout-warning\n## Ограничения\n\n-   более медленная трассировка связей;\n\n-   избыточность хранения: у каждого объекта одинаковый набор атрибутов\n:::\n:::\n\n::: {.column width=\"50%\"}\n![Полярные арктические метеостанции](images/relational_db.svg){width=\"100%\"}\n:::\n:::\n\n## Реляционные БД --- терминология\n\nТаблица называется **отношением (relation)**.\n\nОтсюда название модели --- *реляционная*.\n\n::: columns\n::: {.column width=\"60%\"}\n![](images/relational_term.svg){width=\"100%\"}\n:::\n\n::: {.column width=\"40%\"}\n**Домен** --- допустимое множество значений.\n\n-   в широком смысле --- *тип данных* атрибута: текст, целое число, действительное число, дата, геометрия и т.д;\n\n-   в узком смысле --- конкретный *перечень* или *интервал* значений;\n:::\n:::\n\n## Реляционная база данных\n\n**Ключ отношения** --- это подмножество атрибутов, имеющее следующие свойства:\n\n-   уникальность идентификации (значение ключа уникально для каждого кортежа);\n\n-   ни один из атрибутов ключа нельзя удалить, не нарушив его уникальности;\n\n-   служит для обеспечения неизбыточности и целостности БД.\n\n::: callout-note\n## Таким образом\n\nИ первичный и внешний ключ может состоять из нескольких атрибутов. Например, каждая запись может определяться уникальным сочетанием даты и региона измерения.\n:::\n\n## Шкалы измерений\n\nДопустимое множество операций над атрибутом зависит не только от его домена, но также от **шкалы измерения**.\n\n| Шкала             | Множество                                 | Отношение больше/меньше      |\n|-----------------|--------------------------------|-----------------------|\n| **номинальная**   | неупорядоченные элементы                  | нельзя определить            |\n| **порядковая**    | упорядоченные элементы                    | да/нет                       |\n| **интервальная**  | с заданным расстоянием                    | насколько больше/меньше      |\n| **относительная** | с заданным расстоянием и абсолютным нулём | во сколько раз больше/меньше |\n\n## Шкалы измерений\n\nДопустимое множество операций над атрибутом зависит не только от его домена, но также от **шкалы измерения**.\n\n| Шкала             | Арифметика             | Пример                     |\n|-------------------|------------------------|----------------------------|\n| **номинальная**   | равенство / неравнство | типы почв                  |\n| **порядковая**    | +больше / меньше       | классы пожароопасности     |\n| **интервальная**  | +разность, среднее     | температура воздуха        |\n| **относительная** | +сумма, отношение      | валовой внутренний продукт |\n\n## Геореляционная БД\n\n**Геореляционной** называется реляционная база данных с поддержкой геометрических доменов значений.\n\n![](images/georelational.svg){fig-align=\"left\" width=\"100%\"}\n\n::: callout-note\n## Пространственный объект\n\nВ геореляционных БД один кортеж соответствует одному пространственному объекту.\n:::\n\n## Отношение геометрии и атрибутов\n\nВ геореляционных базах данных допустимое множество операций над атрибутом также зависит от того как он получен относительно пространства.\n\n**Опора измерений** --- физический объем, подвергнутый измерению.\n\n::: columns\n::: {.column width=\"50%\"}\n::: callout-note\n## Экстенсивные атрибуты\n\nПропорциональны опоре измерений. Суммируются при объединении территорий и делятся при разделении.\n\n![Численность населения](images/extensive.svg){width=\"100%\"}\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: callout-note\n## Интенсивные атрибуты\n\nНе пропорциональны опоре измерений. Осредняются при объединении территорий и остаются прежними при разделении.\n\n![Плотность населения](images/intensive.svg){width=\"100%\"}\n:::\n:::\n:::\n\n## Уровни проектирования\n\n::: columns\n::: {.column width=\"10%\"}\n![](images/123.png){width=\"65%\"}\n:::\n\n::: {.column width=\"90%\"}\n\nКонцептуальный\n\n:   объекты реальности, их отношения и характеристики; концептуальные модели географической информации; источники данных; пользовательские требования.\n\nЛогический\n\n:   модели данных; cтруктура базы данных, ее разбиение на связанные элементы; атрибуты объектов и их типы данных.\n\nФизический\n\n:   фактическое представление данных в памяти компьютера; программное и аппаратное обеспечение\n:::\n:::\n\n## Требования к базе данных\n\nБаза пространственных данных должна быть:\n\n-   **согласованной по времени** -- данные должны соответствовать определенному времени, быть актуальными;\n\n-   **полной**, достаточно подробной для предполагаемых целей анализа и моделирования;\n\n-   **позиционно точной**, абсолютно совместимой с другими данными, которые могут добавляться в нее;\n\n-   **достоверной**, правильно отражающей характер явлений посредством атрибутов;\n\n-   **легко обновляемой и доступной** для выбранной катгории пользователей;\n\n-   **неизбыточной и внутренне непротиворечивой**.\n\n## Система управления базами данных\n\nСистема управления базами данных (СУБД) [@gost:10032-2007]\n\n:   Совокупность программных и лингвистических средств общего или специального назначения, обеспечивающих управление созданием и использованием баз данных.\n\n**Основные функции** СУБД:\n\n-   *управление хранением* данных во внешней (дисковой) и оперативной памяти;\n\n-   *выполнение транзакций* --- последовательностей процедур;\n\n-   *обеспечение надежности* --- способности восстанавливать состояние БД после аппаратного или программного сбоя\n\n-   *поддержка специального языка* управления БД.\n\n## Транзакция\n\nТранзакция\n\n:   Неделимая с точки зрения воздействия на БД последовательность операций манипулирования данными\n\n::: callout-tip\n## Примеры\n\nПримерами транзакций могут служить:\n\n-   чтение данных;\n\n-   преобразование отдельных единиц данных;\n\n-   добавление или удаление кортежей (записей);\n\n-   изменение логической схемы данных --- например, добавление новых атрибутов или отношений.\n:::\n\n## Атрибутивные операции\n\n::: columns\n::: {.column width=\"50%\"}\n**Вычисление** выполняется для изменения значений одного атрибута. При этом могут использоваться значения других атрибутов или информация о геометрии объектов.\n\n::: callout-tip\n## Пример\n\nПеревести проценты (0-100) в доли (0-1)\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/recalc.svg){width=\"100%\"}\n:::\n:::\n\n## Атрибутивные операции\n\n::: columns\n::: {.column width=\"50%\"}\n**Интерполяция** используется для вычисления промежуточных значений на основе существующих.\n\n::: callout-tip\n## Пример\n\nВосстановление пропусков в данных, например в ряду речных расходов (гидрограф).\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/interp.svg){width=\"100%\"}\n:::\n:::\n\n::: callout-important\n## Важно\n\nДля выполнения интерполяции объекты (строки) необходимо упорядочить (по времени или другому атрибуту).\n:::\n\n## Атрибутивные операции\n\n::: columns\n::: {.column width=\"60%\"}\n**Классификация** (реклассификация) используется для разделения значений на группы, определяемые номинальной или порядковой шкалой измерений.\n\n::: callout-tip\n## Пример\n\nКлассификация населенных пунктов по людности на основании численности населения.\n:::\n:::\n\n::: {.column width=\"40%\"}\n![](images/class.svg){width=\"100%\"}\n:::\n:::\n\n::: callout-note\n## Заметим, что\n\nНе обязательно классифицировать числовой атрибут, можно также перевести одну классификацию в другую. Например, уменьшить число классов, объединив их в более крупные.\n:::\n\n## Атрибутивные операции\n\n::: columns\n::: {.column width=\"50%\"}\n**Агрегирование** используется для вычисления сводных значений для групп объектов.\n\n::: callout-tip\n## Пример\n\nВычисление средней крутизны склона для водосборов, входящих в бассейны разных рек.\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/aggr.svg){width=\"100%\"}\n:::\n:::\n\n::: callout-important\n## Важно\n\nВ процессе агрегирования происходит объединение геометрий объектов в *мультигеометрии*. При этом пересекающиеся в рамках одной мультигеометрии объекты могут быть объединены в один с удалением общих границ,\n:::\n\n## Фильтрация\n\n**Фильтрация** используется чтобы оставить в данных только те кортежи, атрибуты которых соответствуют заданным критериям.\n\n![](images/filtering.svg){width=\"100%\"}\n\n::: callout-tip\n## Пример\n\nОставить только лесные и степные фитоценозы с количеством осадков выше 500 мм в год\n:::\n\n## Проекция\n\n::: columns\n::: {.column width=\"50%\"}\n**Проекция** используется чтобы оставить только нужные атрибуты объектов.\n\n::: callout-tip\n## Пример\n\nИз всех атрибутов оставить только мощность осадков и номер отдела четвертичного периода.\n:::\n\n::: callout-important\n## Важно\n\nПроекция приводит к изменению структуры таблицы\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/selection.svg){width=\"100%\"}\n:::\n:::\n\n## Соединение\n\n::: columns\n::: {.column width=\"50%\"}\n**Соединение** используется чтобы объединить атрибуты соответствующих объектов из двух таблиц в одну.\n\n::: callout-tip\n## Пример\n\nК данным по регионам присоединить статистику по промышленному производству.\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/join.svg){width=\"100%\"}\n:::\n:::\n\n::: callout-important\n## Важно\n\nДля определения соответствия необходимо указать **ключевые поля** --- атрибуты, уникальным образом идентифицирующие объекты в обеих таблицах.\n:::\n\n## SQL\n\n**Structured Query Language (SQL)** --- язык структурированных запросов. Применяется для создания, модификации и управления данными в реляционной базе данных.\n\nSQL используется для выполнения *атрибутивных* запросов.\n\nПростейшая форма запроса --- **проекция**:\n\n**`SELECT`** *\\<атрибуты\\>* **`FROM`** *\\<отношение\\>*\n\n::: callout-tip\n## Примеры\n\nПолучить таблицу метеостанций целиком (`*`):\n\n**`SELECT`** `*` **`FROM`** `stations`\n\nПолучить только столбцы идентификатора и имени метеостанции:\n\n**`SELECT`** `id,name` **`FROM`** `stations`\n:::\n\n## SQL\n\nДля выполнения **фильтрации** запрос расширяется:\n\n**`SELECT`** *\\<атрибуты\\>* **`FROM`** *\\<отношение\\>* **`WHERE`** *\\<условия\\>*\n\n-   Несколько условий часто объединяются `AND` (*и*) и `OR` (*или*).\n\n::: callout-tip\n## Примеры\n\nВсе метеостанции на Шпицбергене (`tid = 3`):\n\n**`SELECT`** `*` **`FROM`** `stations` **`WHERE`** `tid = 3`\n\nВсе метеостанции на Шпицбергене, либо основанные до 1950 года:\n\n**`SELECT`** `*` **`FROM`** `stations` **`WHERE`** `tid = 3 OR year < 1950`\n\nИдентификатор и имя станций на Шпицбергене, не принадлежащих Норвегии (`oid <> 2`):\n\n**`SELECT`** `id,name` **`FROM`** `stations` **`WHERE`** `tid = 3` `AND` `oid <> 2`\n:::\n\n## SQL\n\n-   **Проверить на вхождение в множество** можно через `IN()`\n\n-   **Инвертировать** условие можно через `NOT`.\n\n-   **Проверить пустоту** можно через `IS NULL` .\n\n::: callout-tip\n## Примеры\n\nВсе метеостанции на Шпицбергене или в Гренландии:\n\n**`SELECT`** `*` **`FROM`** `stations` **`WHERE`** `tid IN (0, 3)`\n\nВсе метеостанции не на Шпицбергене, и не в Гренландии\n\n**`SELECT`** `*` **`FROM`** `stations` **`WHERE`** `tid NOT IN (0, 3)`\n\nВсе метеостанции, у которых не указана территория:\n\n**`SELECT`** `*` **`FROM`** `stations` **`WHERE`** `tid IS NULL`\n:::\n\n## SQL\n\nТакже в SQL распространены операторы:\n\n-   `LIKE` --- для выполнения неточных сравнений (например, поиска топонимов);\n\n-   `BETWEEN` --- для проверки вхождения в интервал значений;\n\n-   `GROUP BY` --- для выполнения агрегирования по атрибуту;\n\n-   `JOIN` --- для соединения таблиц (существуют разные виды соединений).\n\nПри проверки условий используются стандартные символы:\n\n-   `>, >=, =, <, <=`\n\n-   `<>, !=` --- неравенство\n\n## Словарик\n\n::: columns\n::: {.column width=\"50%\" style=\"color: blue; text-align: end;\"}\nБаза данных\n\nБаза пространственных данных\n\nРеляционная модель\n\nАтрибут\n\nИнтенсивный / Экстенсивный\n\nКортеж\n\nПервичный ключ\n\nДомен\n\nСУБД\n\nТранзакция\n\nЗапрос\n:::\n\n::: {.column width=\"50%\" style=\"color: red\"}\nDatabase\n\nSpatial database\n\nRelational model\n\nAttribute\n\nIntensive / Extensive\n\nTuple\n\nPrimary key\n\nDomain\n\nDBMS\n\nTransaction\n\nQuery\n:::\n:::\n\n## Библиография\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}