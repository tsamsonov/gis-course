{
  "hash": "e724da399562178f31def75362b7455c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Геометрические операции — III\"\nsubtitle: \"Геоинформатика I. Базы пространственных данных\"\ndate: today\ndate-format: long\nauthor: \"Самсонов Тимофей Евгеньевич\"\nexecute:\n  echo: false\n  freeze: true\nengine: knitr\nformat:\n  revealjs: \n    theme: [default, custom.scss]\n    margin: 0.2\n    width: 1280\n    height: 720\n    slide-number: true\n    footer: \"Самсонов Т. Е. Геоинформатика: курс лекций\"\n    header-includes: <link rel=\"stylesheet\" media=\"screen\" href=\"https://fontlibrary.org//face/pt-sans\" type=\"text/css\"/>\nbibliography: references.yaml\nmainfont: PT Sans\n---\n\n\n## Основные операции\n\n::: columns\n::: {.column width=\"50%\"}\n1.  Расстояния между объектами\n2.  Периметр линии\n3.  Площадь полигона\n4.  Точка относительно прямой\n5.  Точка относительно отрезка\n6.  Пересечение отрезков\n7.  Точка в полигоне\n8.  Ограничивающий прямоугольник\n9.  Выпуклая оболочка\n10. Минимальный прямоугольник\n:::\n\n::: {.column width=\"50%\"}\n1.  Пересечение множества отрезков\n2.  **Оверлей полигонов**\n3.  **Слияние линий и полигонов**\n4.  **Полигонизация линий**\n5.  **Буферная зона**\n6.  **Триангуляция Делоне**\n7.  **Диаграмма Вороного**\n8.  **Скелет и срединная ось полигона**\n9.  **Центроид и точка на поверхности**\n10. **Вогнутая оболочка**\n:::\n:::\n\n## Оверлей\n\n**Оверлей** --- пространственное наложение двух или более пространственных объектов, при котором образуется их геометрическая и атрибутивная композиция.\n\n![](images/overlay.svg){width=\"100%\"}\n\n::: callout-warning\n## Проблема\n\nДля выполнения оверлея неэффективно хранить полигоны как коллекции отрезков. В этом случае затруднительно получать границы образуемых в процессе оверлея областей.\n:::\n\n## Разбиение множества\n\nРазбиение множества\n\n:   Представление множества в виде объединения произвольного числа попарно неперескающихся непустых подмножеств\n\n::: columns\n::: {.column width=\"70%\"}\nСемейство множеств $Y = \\{Y_\\alpha\\}$, где $\\alpha \\in A$ --- множество индексов, является разбиением множества $X$, если:\n\n-   $Y$ не содержит пустого множества: $\\varnothing \\notin Y$\n\n-   Объединение множеств, входящих в $Y$, равно $X$:\n\n    $$\n    \\bigcup Y_\\alpha = X\n    $$\n\n-   Пересечение любых различных множеств $Y$ пусто:\n\n    $$\n    \\forall~\\alpha,\\beta \\in A,~\\alpha \\neq \\beta \\Longrightarrow Y_\\alpha \\cap Y_\\beta = \\varnothing\n    $$\n:::\n\n::: {.column width=\"30%\"}\n![](images/set_subdivision.svg){width=\"100%\"}\n:::\n:::\n\n## Разбиение множества\n\n::: columns\n::: {.column width=\"60%\"}\n::: callout-warning\n## Проблема\n\nПлоскость нельзя разбить множествами, которые являются *замыканиями* (включают собственную границу), т.к. в этом случае они будут пересекаться.\n:::\n\n::: callout-tip\n## Решение\n\nПредставить разбиение в виде совокупности *вершин (*$V$*)*, *ребер (*$E$) и *граней (*$F$). Эти подмножества являются *открытыми*: ребра не включают вершины, а грани не включают ребра.\n:::\n\n$$Y = V \\cup E \\cup F$$\n:::\n\n::: {.column width=\"40%\"}\n![](images/set_subdivision_details.svg){width=\"100%\"}\n:::\n:::\n\n## Библиография\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}