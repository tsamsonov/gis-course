---
title: "Геометрические операции — III"
subtitle: "Геоинформатика I. Базы пространственных данных"
date: today
date-format: long
author: "Самсонов Тимофей Евгеньевич"
execute:
  echo: false
  freeze: true
engine: knitr
format:
  revealjs: 
    theme: [default, custom.scss]
    margin: 0.2
    width: 1280
    height: 720
    slide-number: true
    footer: "Самсонов Т. Е. Геоинформатика: курс лекций"
    header-includes: <link rel="stylesheet" media="screen" href="https://fontlibrary.org//face/pt-sans" type="text/css"/>
bibliography: references.yaml
mainfont: PT Sans
---

## Основные операции

::: columns
::: {.column width="50%"}
1.  Расстояния между объектами
2.  Периметр линии
3.  Площадь полигона
4.  Точка относительно прямой
5.  Точка относительно отрезка
6.  Пересечение отрезков
7.  Точка в полигоне
8.  Ограничивающий прямоугольник
9.  Выпуклая оболочка
10. Минимальный прямоугольник
:::

::: {.column width="50%"}
1.  Пересечение множества отрезков
2.  **Оверлей полигонов**
3.  **Слияние линий и полигонов**
4.  **Полигонизация линий**
5.  **Буферная зона**
6.  Триангуляция Делоне
7.  Диаграмма Вороного
8.  Скелет и срединная ось полигона
9.  Центроид и точка на поверхности
10. Вогнутая оболочка
:::
:::

## Разбиение множества

Разбиение множества

:   Представление множества в виде объединения произвольного числа попарно неперескающихся непустых подмножеств

::: columns
::: {.column width="70%"}
Семейство множеств $S = \{S_\alpha\}$, где $\alpha \in A$ --- множество индексов, является разбиением множества $X$, если:

-   $S$ не содержит пустого множества: $\varnothing \notin S$

-   Объединение множеств, входящих в $S$, равно $X$:

    $$
    \bigcup S_\alpha = X
    $$

-   Пересечение любых различных множеств $S$ пусто:

    $$
    \forall~\alpha,\beta \in A,~\alpha \neq \beta \Longrightarrow S_\alpha \cap S_\beta = \varnothing
    $$
:::

::: {.column width="30%"}
![](images/set_subdivision.svg){width="100%"}
:::
:::

## Разбиение плоскости

::: columns
::: {.column width="60%"}
::: callout-warning
## Проблема

Плоскость нельзя разбить множествами, которые являются *замыканиями* (включают собственную границу), т.к. в этом случае они будут пересекаться.
:::

::: callout-tip
## Решение

Представить разбиение в виде совокупности *вершин*, *ребер* и *граней*. Эти подмножества являются *открытыми*: ребра не включают вершины, а грани не включают вершины и ребра.
:::

$$S = V \bigcup E \bigcup F,$$

где подмножества $V = \{v_i\}$ --- вершины, $E = \{e_j\}$ --- ребра, $F = \{f_k\}$ --- грани.
:::

::: {.column width="40%"}
![](images/set_subdivision_details.svg){width="100%"}
:::
:::

## Полуребра

При обработке разбиений удобно представить каждое ребро $e_j$ в виде двух полуребер $\vec{e}_{j,0}$ и $\vec{e}_{j,1}$, имеющих противоположные направления.

::: columns
::: {.column width="70%"}
1.  Полуребра называются *близнецами*:

    $$
    \vec{e}_{j,0} = \texttt{twin}(\vec{e}_{j,1});~\vec{e}_{j,1} = \texttt{twin}(\vec{e}_{j,0})
    $$

2.  Каждое полуребро входит в состав границы только одной грани.

3.  Полуребро направлено таким образом, что грань находится *слева* от него.

    -   полуребра *внешних* границ упорядочены *против* часовой стрелки;

    -   полуребра *внутренних* границ (дырок) упорядочены *по* часовой стрелке.
:::

::: {.column width="30%"}
![](images/halfedges.svg){width="100%"}
:::
:::

## Двусвязный список ребер

Структура данных $D$, которая опирается на следующие классы объектов:

::: columns
::: {.column width="75%"}
**Вершина** $v$

|                     |                                              |
|---------------------|----------------------------------------------|
| $(x,y)$             | координаты                                   |
| $\texttt{halfedge}$ | полуребро, для которого $v$ является началом |

**Грань** $f$

|                  |                                                          |
|---------------|---------------------------------------------------------|
| $\texttt{outer}$ | любое полуребро внешней границы                          |
| $\texttt{inner}$ | список любых полуребер дырок (по одному на каждую дырку) |
:::

::: {.column width="25%"}
![](images/vertex_face.svg){width="90%"}
:::
:::

::: callout-note
## Особенности

Для *неограниченной* области $\texttt{outer_component} = \varnothing$, для полигона *без дырок* $\texttt{inner_components} = \varnothing$
:::

## Двусвязный список ребер

::: columns
::: {.column width="70%"}
**Полуребро** $\overrightarrow e$

|                   |                                        |
|-------------------|----------------------------------------|
| $\texttt{origin}$ | вершина, являющаяся началом полуребра  |
| $\texttt{twin}$   | полуребро-близнец                      |
| $\texttt{face}$   | инцидентная грань                      |
| $\texttt{next}$   | следующее полуребро в $\texttt{face}$  |
| $\texttt{prev}$   | предыдущее полуребро в $\texttt{face}$ |

::: callout-note
## Объем данных

Размер вершины и полуребра фиксирован. Размер грани $\sim$ кол-во дырок.
:::

::: callout-tip
## А конец полуребра?

Конец полуребра можно получить как $\texttt{origin}(\texttt{twin}(\overrightarrow{e}))$
:::
:::

::: {.column width="30%"}
![](images/halfedge.svg){width="100%"}
:::
:::

## Оверлей

::: columns
::: {.column width="50%"}
**Оверлей** двух разбиений $S_1$ и $S_2$ --- это разбиение $O(S_1, S_2)$, в котором все грани $f$ являются

-   *максимальными* (по площади);

-   *открытыми* (не включающими ребра и вершины);

-   *линейно связными* (представимыми в виде полигона)

подмножествами пересечений $f_1 \cap f_2$ каких-либо граней $f_1 \in S_1$, $f_2 \in S_2$.
:::

::: {.column width="50%"}
![](images/overlay_1.svg){width="100%"}
:::
:::

## Оверлей

::: columns
::: {.column width="50%"}
**Оверлей** двух разбиений $S_1$ и $S_2$ --- это разбиение $O(S_1, S_2)$, в котором все грани $f$ являются

-   *максимальными* (по площади);

-   *открытыми* (не включающими ребра и вершины);

-   *линейно связными* (представимыми в виде полигона)

подмножествами пересечений $f_1 \cap f_2$ каких-либо граней $f_1 \in S_1$, $f_2 \in S_2$.
:::

::: {.column width="50%"}
![](images/overlay_2.svg){width="100%"}
:::
:::

## Граф

**Простой граф** $G(V,E)$ --- совокупность множества вершин $V = \{v_1, v_2, ...\}$ и множества ребер $E$ [@newman2018].

::: columns
::: {.column width="50%"}
-   $E$ состоит из упорядоченных пар элементов множества вершин:

    $$
    e_{ij} = \{v_i, v_j \},~ i \neq j
    $$

-   $V$ не пусто;

-   $E$ может быть пустым;

-   не все комбинации $\{v_i, v_j \}$ могут входить в $E$.

Максимальный связный подграф называется **компонентой** графа.
:::

::: {.column width="50%"}
![](images/graph.svg){width="100%"}
:::
:::

## Оверлей --- алгоритм [@deberg:2008]

**Вход**: планарные разбиения $S_1$ и $S_2$ в виде двусвязных списков $D_1$ и $D_2$

**Выход**: оверлей $S_1$ и $S_2$ в виде двусвязного списка $D$.

1.  Объединить списки простым копированием: $D = D_1 \cup D_2$, сохранив информацию о принадлежности вершин, ребер и граней исходным разбиениям.

2.  Вычислить пересечения между ребрами внутри $D$, используя алгоритм сканирующей линии Бентли-Оттмана.

    -   если событие включает ребра из $D_1$ и $D_2$, обновить ребра в $D$;

    *После этого шага* $D$ *имеет корректный перечень вершин и полуребер для* $O(S_1, S_2)$*, но не граней*.

3.  Вычислить все границы (замкнутые последовательности полуребер) в $D$.

4.  Связать внешние границы и относящиеся к ним внутренние в виде графа $G$.

5.  Для каждой компоненты $G$ создать грань в $D$.

## Обновление двусвязного списка

При появлении пересечения необходимо добавить вершину, а также новые полуребра, для которых она будет $\texttt{origin}$. Для старых полуребер обновить $\texttt{next}$.

![](images/overlay_sweep.svg){width="100%"}

## Булевы операции

**Оверлей** полигонов часто используется для выполнения *булевых* операций.

![](images/overlay.svg){width="100%"}

*Объединение*: грани, образованные $A$ или $B$.

*Пересечение*: грани, образованные $A$ и $B$.

## Вопросы на подумать

::: columns
::: {.column width="70%"}
Какие из приведенных равенств всегда выполняются для планарного разбиения?

$$
\begin{aligned}
\texttt{twin}(\texttt{twin}(\overrightarrow e)) &= \overrightarrow e\\~\\
\texttt{next}(\texttt{prev}(\overrightarrow e)) &= \overrightarrow e\\~\\
\texttt{twin}(\texttt{prev}(\texttt{twin}(\overrightarrow e))) &= \texttt{next}(\overrightarrow e)\\~\\
\texttt{face}(\overrightarrow e) &= \texttt{face}(\texttt{next}(\overrightarrow e))
\end{aligned}
$$
:::

::: {.column width="30%"}
![](images/rick_thinking.png){width="100%"}
:::
:::

## Слияние полигонов

**Слияние** --- это объединение объектов с сохранением их размерности.

Осуществляется оверлей полигонов, но перед поиском циклов удаляются ребра и вершины, принадлежащие *только* удаляемым объектам.

![](images/merge.svg){width="100%"}

## Полигонизация линий

**Полигонизация линий** --- это преобразование множества линий в полигоны.

В планарном разбиении, определяемом множеством линий, сохраняются только грани конечного размера.

![](images/polygonization.svg){width="100%"}

## Буферные зоны

**Буферная зона** --- это множество точек, располагающихся в пределах заданного расстояния относительно объекта.

::: columns
::: {.column width="40%"}
-   буфер точки представляет собой диск;

-   буфер полигона может быть положительным и отрицательным;

-   буфер точки или линии всегда положительный.
:::

::: {.column width="60%"}
![](images/buffering.svg){width="55%"}
:::
:::

::: callout-tip
## Применение

Используются при анализе влияния. Например, определения водоохранных зон.
:::

## Буферная зона линии

**Буферная зона линии** получается путем *слияния* прямоугольников и дисков заданной ширины (радиуса), построенных относительно ребер и вершин.

![](images/buffer_line.svg){width="100%"}

*Самостоятельная работа:* формализуйте получение координат прямоугольников

## Буферная зона полигона (положительная)

**Положительная буферная зона полигона** получается путем *слияния* полигона и буферной зоны его границы.

![](images/buffer_poly.svg){width="80%"}

## Буферная зона полигона (отрицательная)

**Отрицательная буферная зона полигона** получается путем *вычитания* из полигона буферной зоны его границы.

![](images/buffer_poly_neg.svg){width="80%"}

## Библиография
