import shapely
pol = shapely.Polygon((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0))
import shapely
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
import shapely
import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
p = gpd.GeoSeries(pol)
p.plot()
plt.show()
import shapely
import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
p = gpd.GeoSeries(pol)
p.plot()
plt.show()
import shapely
import shapely.plotting as shplt
# import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
shplt.plot_polygon(pol)
# p = gpd.GeoSeries(pol)
# p.plot()
# plt.show()
import shapely
import shapely.plotting as shplt
# import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
shplt.plot_polygon(pol)
# p = gpd.GeoSeries(pol)
# p.plot()
# plt.show()
import shapely
import shapely.plotting as shplt
# import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
shplt.plot_polygon(pol)
# p = gpd.GeoSeries(pol)
# p.plot()
# plt.show()
import shapely
import shapely.plotting as shplt
# import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
shplt.plot_polygon(pol)
# p = gpd.GeoSeries(pol)
# p.plot()
# plt.show()
import shapely
# import shapely.plotting as shplt
import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
# shplt.plot_polygon(pol)
p = gpd.GeoSeries(pol)
p.plot()
plt.show()
import shapely
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
p = gpd.GeoSeries(pol)
df = pd.DataFrame(
{
"Name": ['Участок 2545'],
"Area": [pol.area],
"Стоимость" [56]
}
)
import shapely
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
p = gpd.GeoSeries(pol)
df = pd.DataFrame(
{
"Name": ['Участок 2545'],
"Area": [pol.area],
"Стоимость" [56]
}
)
gdf = gpd.GeoDataFrame(
df, geometry=pol
)
p.plot()
plt.show()
import shapely
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
p = gpd.GeoSeries(pol)
df = pd.DataFrame(
{
"Name": ['Участок 2545'],
"Area": [pol.area],
"Стоимость" [56]
}
)
gdf = gpd.GeoDataFrame(
df, geometry=pol
)
p.plot()
plt.show()
import shapely
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
p = gpd.GeoSeries(pol)
df = pd.DataFrame(
{
"Name": ['Участок 2545'],
"Area": [pol.area],
"Стоимость" [56]
}
)
gdf = gpd.GeoDataFrame(
df, geometry=pol
)
p.plot()
plt.show()
import shapely
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
p = gpd.GeoSeries(pol)
df = pd.DataFrame(
{
"Name": ['Участок 2545'],
"Area": [pol.area],
"Стоимость": [56]
}
)
gdf = gpd.GeoDataFrame(
df, geometry=pol
)
p.plot()
plt.show()
import shapely
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
p = gpd.GeoSeries(pol)
df = pd.DataFrame(
{
"Name": ['Участок 2545'],
"Area": [pol.area],
"Стоимость": [56]
}
)
gdf = gpd.GeoDataFrame(
df, geometry=p
)
p.plot()
plt.show()
df
gdf
pol.area
library(sf)
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
library(reticulate)
install.packages("reticulate")
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
library(tiobeindexr)
install.packages("tiobeindexr")
library(tiobeindexr)
devtools::install_github("amrrs/tiobeindexr")
library(tiobeindexr)
top_20()
reticulate::repl_python()
b = 4503599627370496
a = 1351079888211149
a/b
4^9
remotes::install_github("r-hub/cransays")
cran_incoming <- cransays::take_snapshot()
View(cran_incoming)
library(sf)
library(tidyverse)
library(classInt)
library(mapsf) # Удобное построение тематических карт средствами plot()s
roads = read_sf("../r-geo-course/data/roads.gpkg") # Дороги
poi = read_sf("../r-geo-course/data/poi_point.gpkg") # Точки интереса
rayons = read_sf("../r-geo-course/data/boundary_polygon.gpkg") # Границы районов
stations = read_sf("../r-geo-course/data/metro_stations.gpkg") # Станции метро
water = read_sf("../r-geo-course/data/water_polygon.gpkg") # Водные объекты
stations$label = 'М' # пригодится для подписей
frame = roads |> st_bbox() |> st_as_sfc() |> st_geometry()
# Функция отвечает за рисование базовой карты
basemap2 = function(add = FALSE){
mf_base(frame, col = NA, add = add)
mf_base(water,
col = "lightskyblue1",
border = "lightskyblue3",
add = TRUE)
mf_base(roads,
col = "gray70",
add = TRUE)
mf_base(poi_food,
col = "deepskyblue4",
pch = 20, cex = 0.5,
add = TRUE)
mf_base(stations,
col = "slategray4",
pch = 20,
cex = 3,
add = TRUE)
mf_label(stations,
var = 'label',
col = "white",
cex = 0.6)
}
poi_food = poi |>
select(NAME, AMENITY) |>
filter(AMENITY %in% c("restaurant", "bar", "cafe",
"pub", "fast_food")) |>
mutate(count = 1)
zones = stations |>
st_combine() |>
st_voronoi() |>
st_collection_extract() |>
st_crop(frame)
# Агрегруем данные по каждой зоне
zones_poi = aggregate(poi_food['count'], zones, sum)
# Визуализируем результат
basemap2()
mf_base(zones, col = adjustcolor("white", alpha.f = 0.5),
add = TRUE)
mf_map(zones_poi, var = 'count', type = 'prop',
col = adjustcolor("turquoise3", alpha.f = 0.5),
border = F,
leg_title = "Заведений\nпитания")
mf_label(zones_poi,
var = 'count',
col = "turquoise4",
cex = log(zones_poi$count)/4)
