---
title: "Введение"
subtitle: "Геоинформатика I. Базы пространственных данных"
date: 02/10/2023
date-format: long
author: "Самсонов Тимофей Евгеньевич"
execute:
  echo: false
  freeze: true
engine: knitr
format:
  revealjs: 
    theme: [default, custom.scss]
    margin: 0.2
    width: 1280
    height: 720
    slide-number: true
    footer: "Самсонов Т. Е. Геоинформатика: курс лекций"
    header-includes: <link rel="stylesheet" media="screen" href="https://fontlibrary.org//face/pt-sans" type="text/css"/>
bibliography: references.yaml
mainfont: PT Sans
---

## Геоинформатика

![](images/semesters.png)

## База пространственных данных

База пространственных данных [@gost:52438-2005]

:   Совокупность пространственных данных, организованных по определенным правилам, устанавливающим общие принципы описания, хранения и манипулирования данными, предназначенная для удовлетворения информационных потребностей пользователя.

::: callout-warning
## Жаргон

Не рекомендуются к использованию словосочетания: база геоданных, пространственная база данных, база данных ГИС
:::

## Пространственный объект

Пространственный объект [@gost:52438-2005]

:   Цифровая модель материального или абстрактного объекта реального или виртуального мира с указанием его идентификатора, координатных и атрибутивных данных.

![](images/feature.svg){fig-align="center" width="100%"}

## Эволюция моделей СУБД

```{mermaid}
%%| fig-width: 11
flowchart TB
  A(Файловые) --> B(Сетевые)
  A --> C(Иерархические)
  C --> D(Реляционные / РСУБД)
  B --> D
  E(Объектно-ориентированные / ООСУБД) --> F(Объектно-Реляционные / ОРСУБД)
  D --> F
```

## Пространственные данные в РСУБД

```{python}
import shapely
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt


pol = shapely.Polygon(((5, 0), (0, 5), (3, 9), (8, 8), (6, 4), (5, 0)))
p = gpd.GeoSeries(pol)

df = pd.DataFrame(
  {
    "Name": ['Уч. 2'],
    "Area": [pol.area],
    "Price": [560000]
  }
)

gdf = gpd.GeoDataFrame(
    df, geometry=p
)
```

::: columns
::: {.column width="40%"}
```{python}
#| fig-width: 3
#| fig-height: 3
#| out-width: 400px
#| out-height: 400px
p.plot()
plt.show()
```

Представление в обычной РСУБД достаточно громоздко
:::

::: {.column width="60%"}
| Name  | Area | Price  | BoundaryID |
|-------|------|--------|------------|
| Уч. 2 | 37.0 | 560000 | 1055       |

: Parcels

| BoundaryID | Edge |
|------------|------|
| 1055       | A    |
| 1055       | B    |
| 1055       | C    |
| 1055       | D    |
| 1055       | E    |

: Polygons
:::
:::

## Пространственные данные в РСУБД

::: columns
::: {.column width="50%"}
```{python}
#| fig-width: 3
#| fig-height: 3
#| out-width: 400px
#| out-height: 400px
p.plot()
plt.show()
```

Представление в обычной РСУБД достаточно громоздко
:::

::: {.column width="25%"}
| Edge | Point |
|------|-------|
| A    | 1     |
| A    | 2     |
| B    | 2     |
| B    | 3     |
| C    | 3     |
| C    | 4     |
| D    | 4     |
| D    | 5     |
| E    | 5     |
| E    | 1     |

: Edges
:::

::: {.column width="25%"}
| Point | X   | Y   |
|-------|-----|-----|
| 1     | 5   | 0   |
| 2     | 0   | 5   |
| 3     | 3   | 9   |
| 4     | 8   | 8   |
| 5     | 6   | 4   |

: Points
:::
:::

## Пространственные данные в РСУБД

::: columns
::: {.column width="50%"}
```{python}
#| fig-width: 3
#| fig-height: 3
#| out-width: 400px
#| out-height: 400px
p.plot()
plt.show()
```

Представление в обычной РСУБД достаточно громоздко
:::

::: {.column width="50%"}
```{mermaid}
%%| fig-width: 2
flowchart TB
  A(Parcels) --> B(Polygons)
  B --> C(Edges)
  C --> D(Points)
```
:::
:::

## Абстрактные типы данных

Важное наследие объектно-ориентированных систем --- поддержка абстрактных типов данных.

::: columns
::: {.column width="45%"}
*Примитивные типы данных* составляют основу реляционных БД. ![](images/elementary_types.svg){width="90%"}
:::

::: {.column width="55%"}
*Абстрактные типы данных (АТД)* обеспечивают хранение коллекций и объектов со свойствами. ![](images/abstract_types.svg){width="100%"}
:::
:::

Большинство ОРСУБД предлагают модульный подход к АТД, позволяя добавлять и удалять их.

## Пространственная СУБД

Абстрактные типы данных --- основа реализации пространственных СУБД.

ПСУБД должна отвечать следующим требованиям:

1.  Представляет собой программный модуль, взаимодействующий с нижестоящей СУБД или являющийся ее компонентой
2.  Поддерживает множественные модели пространственных данных, соответствующие им абстрактные типы данных, а также язык запросов, из которого эти типы могут быть вызваны.
3.  Реализует пространственное индексирование, эффективные алгоритмы пространственных операций и специальные правила оптимизации запросов.

## Пространственная СУБД

Основные аспекты функционирования ПСУБД:

1.  Модели пространственных данных и пространственных отношений.
2.  Язык запросов
3.  Обработка и оптимизация запросов
4.  Организация файлового хранилища
5.  Выполнение аналитических операций (добыча данных).

## Модели пространственных данных

![](images/basic_primitives.svg){width="100%"}

Абстрактные типы данных в ПСУБД реализуют различные модели пространственных данных

## Пространственные отношения

![](images/sp_relations.svg){width="100%"}

Пространственные запросы в ПСУБД опираются на модели пространственных отношений

## Язык запросов

**Structured Query Language (SQL)** --- язык структурированных запросов. Применяется для создания, модификации и управления данными в реляционной базе данных.

Пространственная СУБД поддерживает создание и манипулирование пространственными типами данных:

``` small
SELECT 'SRID=4326;POINT(-123 34)'::geography
"0101000020E61000000000000000C05EC00000000000004140"

CREATE TABLE geotable(gid serial PRIMARY KEY, name TEXT, geom geography(POINT) );

INSERT INTO geotable ( name, geom )
  VALUES ( ST_GeomFromEWKT('SRID=312;POINTM(-126.4 45.32 15)'), 'A Place' )
```

## Пространственные расширения SQL

``` small
SELECT
  m.name,
  SUM(ST_Length(r.geom))/1000 as roads_km
FROM bc_roads AS r
JOIN bc_municipality AS m
  ON ST_Contains(m.geom, r.geom)
GROUP BY m.name
ORDER BY roads_km;

name                        | roads_km
----------------------------+------------------
SURREY                      | 1539.47553551242
VANCOUVER                   | 1450.33093486576
LANGLEY DISTRICT            | 833.793392535662
BURNABY                     | 773.769091404338
PRINCE GEORGE               | 694.37554369147
...
```

## Обработка запросов

![](images/query_plan.svg){width="100%"}

-   SQL --- декларативный язык. Он описывает *что* необходимо получить, но не *как*, т.е. не сам алгоритм выполнения процедуры.

-   СУБД должна самостоятельно определить план эффективного выполнения запроса.

-   Обработка запроса представляет собой последовательность шагов, которую инициирует СУБД для выполнения запроса.

-   Оптимизация пространственных запросов обладает своей спецификой

## Обработка запросов

``` small
SELECT
FROM reltypes R, soiltypes S
WHERE st_area(S.geom) < 10000 AND st_area(R.geom) < 10000
AND st_intersects(R.geom, s.geom)
```

![](images/filter_refine.svg){width="100%"}

Пространственный запрос состоит из фильтрации (`FILTER`) на основе MBR и уточнения (`REFINE`) по реальной геометрии.

## Хранение данных

Данные в файлах имеют одномерное упорядочение. Однако записи можно хранить так чтобы пространственно близкие располагались ближе друг к другу

![](images/ordering_comp1.svg){width="100%"}

## Хранение данных

Данные в файлах имеют одномерное упорядочение. Однако записи можно хранить так чтобы пространственно близкие располагались ближе друг к другу

![](images/ordering_comp2.svg){width="100%"}

## Оптимизация запросов

**Непространственный запрос** *`Выбери всех школьников 10 класса, которые являются призерами всероссийской олимпиады по географии`* раскладывается на 2 подзапроса:

-   **ПРОЕКЦИЯ** (single-scan): выбрать всех школьников 10 класса

-   **СОЕДИНЕНИЕ** (multi-scan): сопоставить таблицу призеров и таблицу школьников

::: callout-note
## Последовательность

Сначала должен быть выполнен запрос проекции, т.к. соединение является более ресурсоемкой многопроходной (*multiscan*) операцией
:::

## Оптимизация запросов

**Пространственный запрос** *`Выбери все регионы с площадью более 100 тыс. кв. км, в которых проходил заключительный этап всероссийской олимпиады школьников по географии`* раскладывается на 2 подзапроса:

-   **ДИАПАЗОН** (single-scan): выбрать регионы с площадью более $100$ тыс. кв. км

-   **ПРОСТРАНСТВЕННОЕ СОЕДИНЕНИЕ** (multi-scan): выбрать регионы, в которых находятся города проведения заключительного этапа

::: callout-note
## Последовательность

Последовательность не очевидна, т.к. вычисление площади --- ресурсоемкая операция. Порядок выполнения пространственных запросов требует тщательного анализа.
:::

## Добыча данных

**Базы *\[пространственных\]* данных** --- источник информации, который требует особого подхода в силу потенциального объема информации и способов взаимодействия с нею.

1.  Алгоритмы для больших данных, или решения, позволяющие совмещать аналитику данных и технологии обработки больших массивов информации.
2.  Расширение функциональности языка запросов --- возможность выполнять пространственную аналитику данных "на лету".

::: callout-note
## Пример

Пространственно-временные базы данных абонентов сотовой сети могут содержать терабайты информации. Как сделать равномерную случайную выборку?
:::

## Библиография
