---
title: "Геометрические операции"
subtitle: "Геоинформатика I. Базы пространственных данных"
date: today
date-format: long
author: "Самсонов Тимофей Евгеньевич"
execute:
  echo: false
  freeze: true
engine: knitr
format:
  revealjs: 
    theme: [default, custom.scss]
    margin: 0.2
    width: 1280
    height: 720
    slide-number: true
    footer: "Самсонов Т. Е. Геоинформатика: курс лекций"
    header-includes: <link rel="stylesheet" media="screen" href="https://fontlibrary.org//face/pt-sans" type="text/css"/>
bibliography: references.yaml
mainfont: PT Sans
---

## Основные операции

::: columns
::: {.column width="50%"}
1.  Расстояние от точки до множества точек
2.  Расстояние между множествами точек
3.  Периметр линии
4.  Площадь полигона
5.  Точка относительно прямой
6.  Пересечение отрезков
7.  Точка в полигоне
8.  Центроид полигона
9.  Точка на поверхности
10. Точка на линии
:::

::: {.column width="50%"}
1.  Оверлей полигонов
2.  Полигонизация линий
3.  Триангуляция Делоне
4.  Диаграмма Вороного
5.  Скелет и срединная ось полигона
6.  Буферная зона
7.  Ограничивающий прямоугольник
8.  Минимальный по площади ограничивающий прямоугольник
9.  Выпуклая оболочка
10. Вогнутая оболочка
:::
:::

## Вектор и прямая

::: columns
::: {.column width="70%"}
Пусть заданы две точки $p_1 = (x_1, y_1)$ и $p_2 = (x_2, y_2)$.

**Вектор** между $p_1$ и $p_2$ определяется как

$$
\overrightarrow{p_1p_2} = (x_2 - x_1,~y_2 - y_1)
$$

**Прямая** через $p_1$ и $p_2$ задается уравнением

$$
\frac{y-y_1}{y_2-y_1} = \frac{x-x_1}{x_2-x_1},
$$

и в каноническом виде

$$
ax + by + c = 0
$$

где $a = y_1-y_2$, $b = x_2 -x_1$, $c = x_1y_2 - x_2y_1$
:::

::: {.column width="30%"}
![](images/p1_p2.svg){width="100%"}
:::
:::

## Расстояние от точки до прямой

::: columns
::: {.column width="50%"}
**Евклидово расстояние** от точки $p_1$ до точки $p_2$ вычисляется как:

$$
d(p_1,p_2) = \sqrt{(x_1 - x_2)^2 + (y_1 - y_2)^2}
$$

**Расстояние** от точки $p = (x_p, y_p)$ до прямой $l$ вычисляется как:

$$
d(p, l) = \frac{|ax_p + by_p + c|}{\sqrt{a^2 + b^2}}
$$

где $a$, $b$ и $c$ --- коэффициенты уравнения прямой $l$.
:::

::: {.column width="50%"}
![](images/d_p_l.svg){width="80%"}
:::
:::

## Расстояние от точки до отрезка

В зависимости от конфигурации это может быть как расстояние до прямой, так и расстояние до одной из крайних точек отрезка.

::: columns
::: {.column width="60%"}
Пусть дана точка $p$ и отрезок $\overline{qr}$, лежащий на прямой $l$. Введем три вектора:

$$
\mathbf u = \overrightarrow{qp},~\mathbf v = \overrightarrow{pr},~\mathbf w = \overrightarrow{qr}
$$

Тогда расстояние определится как:

$$
\mathrm d(p, \overline{qr}) = \begin{cases}
\mathrm d(p, q),~если~(\mathbf u, \mathbf w) < 0; \\
\mathrm d(p, r),~если~(\mathbf v, \mathbf w) < 0; \\
\mathrm d(p, l)~\textrm{в противном случае}
\end{cases}
$$

где $(\mathbf a, \mathbf b) = x_a x_b + y_a y_b$ --- скалярное произведение векторов
:::

::: {.column width="40%"}
![](images/point_segment_dist.svg){width="100%"}
:::
:::

## Расстояние от точки до линии

**Расстояние от точки до линии** $L$ , состоящей из $k$ вершин --- это минимальное из расстояний от точки до каждого из отрезков линии:

$$
d(p, L) = \min \big[\textrm d(p, \overline{p_j p_{j+1}})\big], ~j=0...k-1
$$

::: columns
::: {.column width="30%"}
::: callout-note
## Аппроксимация

Если длины сегментов линии существенно меньше, чем расстояние до точки, то в качестве приближения можно взять расстояние до ближайшей точки линии.
:::
:::

::: {.column width="70%"}
![](images/d_p_polyline.svg){width="100%"}
:::
:::

## Расстояние от точки до полигона

**Расстояние от точки до полигона** $A$, состоящего из $n$ колец, равняется $0$, если точка внутри полигона, иначе равна минимальному расстоянию до границы полигона.

$$
d(p, A) = \min\big[\textrm d(p, \overline{p_{i,j} p_{i,j+1}})\big],~i = 0...n-1,~j = 0...k_i
$$

::: columns
::: {.column width="40%"}
::: callout-note
## Точка в полигоне

Для определения принадлежности точки полигону необходимо использовать соответствующий тест
:::
:::

::: {.column width="60%"}
![](images/d_p_polygon.svg){width="100%"}
:::
:::

## Расстояние Хаусдорфа

Если даны два подмножества $\mathcal{A} = \lbrace a \rbrace$ и $\mathcal{B} = \lbrace b \rbrace$ метрического пространства $M$ с заданным расстоянием $d$, то **расстояние** **Хаусдорфа** $d_H(\mathcal{A}, \mathcal{B})$ вычисляется как:

$$
d_{\mathrm H}(\mathcal{A},\mathcal{B}) = \max\left\{\,\sup_{a \in \mathcal{A}} \inf_{b \in \mathcal{B}} d(a,b),\, \sup_{b \in \mathcal{B}} \inf_{a \in \mathcal{A}} d(a,b)\,\right\}
$$

На практике, когда $\mathcal{A}$ и $\mathcal{B}$ являются конечными точечными множествами, вычисляется дискретная версия $d_H$.

-   для каждой точки $a$ в $\mathcal{A}$ находится ближайшая точка $b_a$ в $\mathcal{B}$ и $\vec{d}_H(\mathcal{A},\mathcal{B}) = \underset{a}{\max}~d(a, b_a)$ как приближение $\sup_{a \in \mathcal{A}} \inf_{b \in \mathcal{B}} d(a,b)$.

-   для каждой точки $b$ в $\mathcal{B}$ находится ближайшая точка $a_b$ в $\mathcal{A}$ и $\vec{d}_H(\mathcal{B},\mathcal{A}) = \underset{b}{\max}~d(b, a_b)$ как приближение $\sup_{b \in \mathcal{B}} \inf_{a \in \mathcal{A}} d(a,b)$.

## Дискретное расстояние Хаусдорфа

**Дискретное расстояние Хаусдорфа** определяется как:

$$
\widehat {d_H}(\mathcal{A},\mathcal{B}) = \max \left\{\vec{d}_H(\mathcal{A},\mathcal{B}),\, \vec{d}_H(\mathcal{B},\mathcal{A}) \right\}
$$

Величина $\vec{d}_H$ называется *направленным расстоянием Хаусдорфа*.

::: callout-warning
## Чувствительность к выбросам

И $d_H$, и $\widehat{d_H}$ являются мимимаксными мерами, они чувствительны к выбросам из множества.
:::

**Модифицированное расстояние Хаусдорфа** заменяет максимум кратчайших расстояний их средним значением, что устраняет чувствительность к выбросам:

$$
d_M = \max \left\{\frac{1}{|\mathcal{A}|}\underset{a}{\sum} d(a, b_a),\, \frac{1}{|\mathcal{B}|}\underset{b}{\sum} d(b, a_b) \right\}
$$

## Длина / периметр

::: columns
::: {.column width="50%"}
Рассчитываются как сумма длин отрезков, составляющих контур объекта:

$$
\sum_{i=0}^{n-2}\sqrt{(x_{i+1}-x_i)^2 + (y_{i+1}-y_i)^2}
$$

::: callout-note
## Полигон

У полигона последняя точка должна иметь такие же координаты, как и первая.
:::
:::

::: {.column width="50%"}
![](images/perimeter.svg){width="100%"}
:::
:::

## Площадь

::: columns
::: {.column width="50%"}
Рассчитывается как сумма площадей трапеций, ограниченных сверху отрезками, составляющими контур объекта:

$$
\frac{1}{2}\sum_{i=0}^{n-2} \underbrace{(y_{i+1}+y_{i})}_{\texttt{основания}}\underbrace{(x_{i+1}-x_{i})}_{\texttt{высота}}
$$

::: callout-note
## Отрицательная площадь

Трапеции, у которых $i+1$-я точка имеет меньший X, чем $i$-я, имеют отрицательную площадь.
:::
:::

::: {.column width="50%"}
![](images/area.svg){width="100%"}
:::
:::

## Точка относительно прямой

::: columns
::: {.column width="60%"}
Пусть прямая $l$ определяется отрезком $\overline{qr}$. Расположение точки $p$ относительно этой прямой зависит от знака площади треугольника $\triangle qpr$:
:::

::: {.column width="40%"}
![](images/triangle_area.svg){width="100%"}
:::
:::

$$
\texttt{area}(\triangle qpr) = \frac{1}{2}\big[x_q y_p - x_p y_q + x_p y_r - x_r y_p + x_r y_q - x_q y_r \big]
$$

$$
\texttt{side}(q,p,r) = \begin{cases} 
1,\textrm{ если } \texttt{area}(\triangle qpr) > 0~(p \textrm{ слева от } l),\\
0,\textrm{ если } \texttt{area}(\triangle qpr) = 0~(p \textrm{ на } l),\\
-1,\textrm{ если } \texttt{area}(\triangle qpr) < 0~(p \textrm{ справа от } l),\\
\end{cases}
$$

## Пересечение отрезков

::: columns
::: {.column width="60%"}
**Отрезки пересекаются**, если их точки попарно располагаются по разные стороны от соответствующих прямых.

В этом случае *одновременно* выполняются два условия:

$$
\texttt{side}(p_1, p_2, p_3) \neq \texttt{side}(p_1, p_2, p_4)\\ 
\texttt{side}(p_3, p_4, p_1) \neq \texttt{side}(p_3, p_4, p_2)
$$
:::

::: {.column width="40%"}
![](images/segment_intersection.svg){width="100%"}
:::
:::

Если отрезки коллинеарны, то надо проверять расстояния:

$$
\textrm d(p_3, \overline{p_1 p_2}) < \epsilon,~\textrm d(p_4, \overline{p_1 p_2}) < \epsilon,~\textrm d(p_1, \overline{p_3 p_4}) < \epsilon,~\textrm d(p_2, \overline{p_3 p_4}) < \epsilon
$$

## Точка пересечения

Представим отрезки в параметрическом виде:

$$
\overline{p_1 p_2} = \{\lambda p_1 + (1 - \lambda) p_2 | \lambda \in [0,1]\}\\
\overline{p_3 p_4} = \{\mu p_3 + (1 - \mu) p_4 | \lambda \in [0,1]\}
$$Если отрезки пересекаются, то справедливо равенство:

$$
\lambda p_1 + (1 - \lambda) p_2 = \mu p_3 + (1 - \mu) p_4\\
\lambda(p_1 - p_2) - \mu(p_3 - p_4) = p_4 - p_2
$$

Переходя от точек к координатам получаем систему уравнений:

$$
\begin{cases}
\lambda(x_1 - x_2) - \mu(x_3 - x_4) = x_4 - x_2\\
\lambda(y_1 - y_2) - \mu(y_3 - y_4) = y_4 - y_2
\end{cases}
$$

Решив систему относительно $\lambda$ и $\mu$, получаем точку пересечения.

## Принадлежность точки полигону

Луч, выпущенный из точки в направлении оси $X$, *сечёт* (`crosses`) границу полигона **нечетное** количество раз.

::: columns
::: {.column width="60%"}
![](images/point_polygon.svg){width="90%"}
:::

::: {.column width="40%"}
### Обратите внимание

Если луч пересекает одну из *вершин* полигона, и оба примыкающих к ней отрезка находятся по одну сторону от луча, то это не сечение, а *касание* границы, которое не должно влиять на результат.
:::
:::

Если полигон состоит из вершин $p_i = (x_i, y_i)$, то в качестве луча можно взять отрезок $\overline{pq}$, где $q = (max(x_i), y_p)$.

## Библиография
