---
title: "Геометрические операции — II"
subtitle: "Геоинформатика I. Базы пространственных данных"
date: today
date-format: long
author: "Самсонов Тимофей Евгеньевич"
execute:
  echo: false
  freeze: true
engine: knitr
format:
  revealjs: 
    theme: [default, custom.scss]
    margin: 0.2
    width: 1280
    height: 720
    slide-number: true
    footer: "Самсонов Т. Е. Геоинформатика: курс лекций"
    header-includes: <link rel="stylesheet" media="screen" href="https://fontlibrary.org//face/pt-sans" type="text/css"/>
bibliography: references.yaml
mainfont: PT Sans
---

## Основные операции

::: columns
::: {.column width="50%"}
1.  Расстояния между объектами
2.  Периметр линии
3.  Площадь полигона
4.  Точка относительно прямой
5.  Точка относительно отрезка
6.  Пересечение отрезков
7.  Точка в полигоне
8.  Ограничивающий прямоугольник
9.  Выпуклая оболочка
10. Минимальный прямоугольник
:::

::: {.column width="50%"}
1.  **Оверлей полигонов**
2.  **Слияние линий и полигонов**
3.  **Полигонизация линий**
4.  **Буферная зона**
5.  **Триангуляция Делоне**
6.  **Диаграмма Вороного**
7.  **Скелет и срединная ось полигона**
8.  **Центроид полигона**
9.  **Точка на поверхности**
10. **Вогнутая оболочка**
:::
:::

## Оверлей

**Оверлей** --- пространственное наложение двух или более пространственных объектов, при котором образуется их геометрическая и атрибутивная композиция.

![](images/overlay.svg){width="100%"}

::: callout-warning
## Проблема

Для выполнения оверлея необходимо уметь эффективно находить пересечения между отрезками, из которых состоят границы полигонов. В общем случае это $O(n^2)$ потенциальных пересечений, где $n$ --- число отрезков
:::

## Особенности пересечения отрезков

::: columns
::: {.column width="50%"}
Если проекции отрезков на любую ось не пересекаются, то и сами отрезки также не пересекаются

![](images/segment_projections.svg){width="100%"}
:::

::: {.column width="50%"}
Пересечению отрезков всегда предшествует их последовательное расположение относительно прямой

![](images/segment_sequence.svg){width="100%"}
:::
:::

## Сканирующая линия (sweeping line)

**Общий принцип:** прямая линия (вертикальная или горизонтальная) сканирует сцену в перпендикулярном направлении и отслеживает события, связанные с пересечениями объектов. Пройденные события остаются позади.

**Основные компоненты:**

1.  *Сканирующая линия.* Структура данных, которая в каждый момент времени содержит информацию о пересекаемых объектах. Обновляется при перемещении линии.
2.  *Очередь событий.* Структура данных, которая содержит перечень событий --- координат, в которых меняется состав или порядок пересекаемых объектов. Пройденные события удаляются, но при этом могут возникать новые.
3.  *Выходная структура данных*.

## Алгоритм Бентли-Оттмана

Определяет пересечения для множества отрезков методом сканирующей линии [@bentley1979].

**Изначальные допущения:**

1.  Вертикальная линия перемещается в направлении оси $X$.
2.  Нет вертикальных отрезков и касаний в точках
3.  В каждой точке пересекается не более двух отрезков

**Сканирующая линия** $L$ содержит идентификаторы отрезков, упорядоченных в направлении оси $Y$.

**Очередь** $E$ содержит события двух типов:

-   Все конечные точки отрезков (известны заранее)

-   Точки пересечения отрезков (вычисляются налету)

## Алгоритм Бентли-Оттмана

Определяет пересечения для множества отрезков методом сканирующей линии [@bentley1979].

**Входные данные**

$n$ отрезков $s_i = \overline{q_i r_i},~i = 0...n-1$

**Выходные данные**

$k = O(n^2)$ пересечений между парами отрезков в виде кортежей $(x, y, i, j)$, где $x,y$ --- координаты точки пересечения, $i, j$ --- номера (идентификаторы) отрезков

**Начальная инициализация**

-   отсортировать $2n$ конечных точек по возрастанию координаты $X$ и наполнить ими $E$;

-   $L = \varnothing$

## Алгоритм Бентли-Оттмана [@sacristán2022]

Пока $E \neq \varnothing$, выполнять в цикле:

1.  $p = \min E$
2.  Если $p = \textrm{start}(s)$:
    -   Если $r = s^- \cap s \neq \varnothing$ то $E = E \cup r$, $R = R \cup r$. Аналогично для $s^+$ и $s$.
    -   $L = L \cup s$
3.  Если $p = \textrm{end}(s)$:
    -   Если $r = s^- \cap s^+ \neq \varnothing$ то $E = E \cup r$, $R = R \cup r$.
    -   $L = L~\backslash~s$
4.  Если $p = s_1 \cap s_2$ при $s_1 <_L s_2$:
    -   Если $r = s_1^- \cap s_2 \neq \varnothing$ то $E = E \cup r$, $R = R \cup r$. Аналогично для $s_2^+$ и $s_1$.
    -   Поменять местами $s_1$ и $s_2$ в $L$
5.  $E = E~\backslash~p$.

```{r, results='asis'}
for (i in 1:79) {
  cat('\n\n## Алгоритм Бентли-Оттмана (симуляция)\n\n')
  cat('![](images/bentley-ottman/bentley-ottman_', i,'.svg){width="100%"}', sep = '')
}
```


## Библиография
